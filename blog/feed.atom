<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bkardell.com/</id>
    <title>bkardell.com rss feed</title>
    <updated>2025-10-02T14:15:15.140Z</updated>
    <generator>awesome mix</generator>
    <author>
        <name>Brian Kardell</name>
        <email>bkardell@gmail.com</email>
        <uri>https://bkardell.com</uri>
    </author>
    <link rel="alternate" href="http://bkardell.com/"/>
    <link rel="self" href="https://bkardell.com/blog/feed.atom"/>
    <subtitle>Just the bkardell.com rss feed</subtitle>
    <logo>http://bkardell.com/profile.jpg</logo>
    <rights>All rights reserved 2018, Brian Kardell</rights>
    <entry>
        <title type="html"><![CDATA[Under-investment]]></title>
        <id>https://bkardell.com/blog/underinvestment.html</id>
        <link href="https://bkardell.com/blog/underinvestment.html">
        </link>
        <updated>2025-10-01T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[A lot more words on a short statement I made last week on social media...]]></summary>
        <content type="html"><![CDATA[
  <h1 class="contextual-heading" style="font-size: 2rem;">Under-investment</h1>
  <p class="segue"><em>A lot more words on a short statement I made last week on social media...</em></p>
  <p>A couple of weeks ago I posted on social media that</p>
  <blockquote>
    <p>It never ceases to amaze me how much stuff there is on the web platform that needs more attention than it gets in practice, despite vendors spending tons already.</p>
  </blockquote>
  <p>Dave Rupert replied asking</p>
  <blockquote> 
    <p>could you itemize that list? i'd be curious. seems like new shiny consumes a lot of the efforts.</p>
  </blockquote>
  <p>I said "no" at the time because it's true it would be a very long list and exceptionally time consuming task if exhaustive, but... It is probably worth rattling off a bunch that I know more or less off the top of my head from experience - so here goes (in no particular order)... I'll comment on a few:</p>
  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">Big general <em>areas</em>...</h2>
    <p>There are certain areas of focus that just always get shoved to the back burner.</p>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Print</h3>
      <p>It's almost absurd to me that printing and print related APIs have the problems and concerns that they still do given that so much of enterprise and government are web based. For example: Will your images be loaded? Who knows! Did you know there is a <code>.print()</code> and it doesn't act the same in several respects as choosing print from the menu? Shouldn't the browser support many of the CSS based features that print pioneered? Like... paging? Or at least actually investing in considering it in the browser at the same time could have helped us determine if those were even good ideas or shape APIs.</p>
    </section>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Accessibility</h3>
      <p>In theory all of the processes are supposed to help create standards and browsers that are accessible - in practice, we miss on this more often than is comfortable to admit. This is mainly because - for whatever reason - so much of this, from reviews to testing to standards work in designing APIs in the first place, is largely done by volunteers or people disconnected from vendors themselves and just trying to keep up. My colleague Alice Boxhall wrote <a href="https://alice.boxhall.au/articles/a-threat-model-for-accessibility-on-the-web/ ">a piece that touches on this, and more</a>. </p>
    </section>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Internationalization</h3>
      <p>Probably in better shape than accessibility in many ways, but the same basic sorts of things apply here. </p>
    </section>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Testing Infrastructure</h3>
      <p>The amount of things that we are incapable of actually testing is way higher than we should be comfortable with. The web actually spent the first 15 years or so of its life without any actual shared testing like web platform tests. Today, lots and lots of that infrastructure is just Google provided, so not community owned or anything.</p>
    </section>
  </section>
  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">Forgotten tech</h2>
    <p>Then there aere are certain big, important projects that were developed and have been widely deployed for ten, or even close to twenty years at this point, but were maybe a little wonky or buggy and then just sort of walked away from.</p>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">SVG</h3>
      <p>After some (like <a href="https://front-end.social/@AmeliaBR">Amelia</a>) doing amazing work to begin to normalize SVG and CSS, the working group effectively disbanded for years with very little investment from vendors.</p>
    </section>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">MathML</h3>
      <p>From its integration in HTML5 until today, almost none of the work done in browsers has been by the browser vendors themselves. Google is the only vendor who has even joined the working group, and not so much to participate as an org as much as to allow someone interested on their own to participate.</p>
    </section>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Web Speech</h3>
      <p>Google and others were so excited to do this back in (checks watch)... 2012. But they did it too early, and in a community group. It's not even a Recommendation Track thing. I can easily see an argument to be made that this is the result of things swinging pretty far in the other direction - this is more than a decade after W3C had put together the <a href="https://www.w3.org/TR/voice-intro/">W3C Speech Interface Framework</a> with lots of XML. But meanwhile there is simple and obvious bugs and improvements that can and should be made - there is lots of be rethought here and very little invested from then till now.</p>
    </section>
  </section>
  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">The "wish list"</h2>
    <p>There is a long list of things that we, as a larger community, aren't investing in in the sense of wider particpation and real funding from browsers, but I think we should... Here are a few of my top ones:</p>
    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Study of the web (and ability to)</h3>
      <p>The HTTPArchive and chrome status are about the best tools we have, but they're again mainly Google - but even other data sources are biased and incomplete. Until 2019 the study of elements on the web was just running a regexp on home pages in the archive. Until just a year or two ago our study of CSS was kind of similar. It just feels like we should have more here.</p>
      <h3 class="contextual-heading" style="font-size: 3rem;">Polyfill ability for CSS</h3>
      <p>A number of us have been saying this for a long time. Even some small things could go a long way here (like, just really exposing what's parsed). After a lot of efforts we got Houdini, which should have helped answer a lot of this. It fizzled out after choosing probably the least interesting first project in my opinion. I don't know that we were looking at it just right, or that we would have done the right things - but I know that not really investing in trying isn't going to get it done either. To be really honest, I'd like a more perfect polyfill story for HTML as well. Once upon a time there was discussion down that road, but when <code>&lt;std-toast&gt;</code>-gate happened, all of the connected discussions died along with it. That's a shame. We <em>are</em> getting there slowly with some important things like custom media queries and so on, but a lot of these things we were starting to pitch a decade ago.</p>
      <h3 class="contextual-heading" style="font-size: 3rem;">Protocols</h3>
      <p>The web has thus far been built a very particular way - but there are many ideas (distributed web ideas, for example) which it's very hard for the web to currently adapt toward because it's full of hard problems that really need involvement from vendors. I'd love to see many of those ideas really have an opportunity to take off, but I don't see good evolutionary paths to allow something to really do that. We had some earlier ideas like protocol handlers and content handlers for how this might work. Unfortunately content handlers were removed, and prototcol handlers are extremely limited and incomplete. Trying to imagine how a distributed web could work is pretty difficult with the tools we have. <em>Perhaps</em> part of this is related other items on my list like powerful features or monetization</p>
      <h3 class="contextual-heading" style="font-size: 3rem;">"Web Views" / "Powerful features"</h3>
      <p>A ton of stuff is built with web technology as <em>apps</em> to get around some of the things that are currently difficult security-wide or privacy wise in the browser itself. Maybe that's how it should be, maybe it isn't. I'm not here to say "ship all the fugu stuff" or something, but it it definitely seems silly that there aren't <em>some</em> efforts to even think "above" the browser engines and standardize some APIs, a bit in the vein of what is now the Winter TC. What people are doing today doesn't seem better. I guesss there is a common theme here that I'd like to really invest in finding better ways to let the platform evolve a bit on its own and then pick it up and run with it.</p>
      <h3 class="contextual-heading" style="font-size: 3rem;">"monetization"</h3>
      <p> I mean, this is a really tough one for so many reasons, both tehnical and political, but I just don't see a thing that could have bigger impact than a way to pay creators that isn't limited to ads and a way to fund new ideas. It just seems at the very core of a lot of things. I put it in quotes because I don't mean specifically the proposal called web monetization. There are lots of other ideas and a wide range of attempts happening, some of them seem less directly like money and more like ways to express licencing agreements or earn discounts.</p>
      <h3 class="contextual-heading" style="font-size: 3rem;">Maps</h3>
      <p>We seem to have mostly just written off maps entirely as something which you just rely on Google Maps or Apple Maps for. That's a shame because there has been interest at several levels - there was a joint OGC/W3C workshop a few years ago, and many ideas. Almost all of them would benefit more than just those few proprietary map systems. There are even simple primitive ideas like adding the concept of pan and zoom to the platform, maybe in CSS. <em>Surely</em> we can do better than where things are right now, but who is going to invest to get it there?</p>
    </section>
  </section>
  <section class="sectioning"> 
    <h2 class="contextual-heading" style="font-size: 2.5rem;">There's a long list</h2>
    <p>There's way more things we could list here... Drag and drop needs work and improvements. Editing (see Contenteditable/execCommand/EditContext) is terribly hard. Given the importance, you'd think it would be one of the bigger areas of investment, but it's not really. Hit testing is a big area that needs defining. I mean, you can see that this year we got <a href="https://github.com/web-platform-tests/interop/issues?q=is%3Aissue%20state%3Aopen%20label%3Afocus-area-proposal">134 focus area proposals for Interop 2026</a>. Those aren't all areas that are under-invested in, exactly, but whatever we choose to focus on there is time and budget we can't spend on the things in this list...</p>
    <p>In the past, I might have said documentation, but I feel like were just doing a lot better with that. We also now have the collectively funded, transparent and independent <a href="https://openwebdocs.org/">openwebdocs.org</a> which Igalia has helped fund since its inception and, to my mind, is one of the most positive things. So many things on this list even <em>could</em> take a similar approach. It would be great to see.</p>
  </section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Bucks]]></title>
        <id>https://bkardell.com/blog/WebBucks.html</id>
        <link href="https://bkardell.com/blog/WebBucks.html">
        </link>
        <updated>2025-07-01T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Back in September 2024 I wrote a piece about the history of attempts at standardizing some kind of Micropayments going back to the late 90s. Like a lot of things I write, it's the outcome of looking at history and background for things that I'm actively thinking about. An announcement the other day made me think that perhaps now is a good time for a follow up post.]]></summary>
        <content type="html"><![CDATA[
  <h1 class="contextual-heading" style="font-size: 2rem;">Web Bucks</h1>
  <p class="segue">Back in September 2024 I wrote a piece about the <a href="https://bkardell.com/blog/MicropaymentsHistory.html">history of attempts at standardizing some kind of Micropayments going back to the late 90s</a>. Like a lot of things I write, it's the outcome of looking at history and background for things that I'm actively thinking about. An announcement the other day made me think that perhaps now is a good time for a follow up post.</p>
  <p>As you probably already know if you're reading this, I write and think a lot about the health of the web ecosystem. We've even got a whole <a href="https://www.youtube.com/watch?v=Nsej-VSS9aI&amp;list=PL_BRVuWxk8spg9XL-XUPSptJNrC6y3y9e">playlist of videos (lots of podcast episodes) on the topic</a> on YouTube. Today, that's nearly all paid for, on all sides, by advertising. In several important respects, it's safe to say that the status quo is under many threats. In several ways it's also worth questioning if the status quo is even <em>good</em>.</p>
  <p>When Ted Nelson first imagined Micropayments in the 1960s, he was imaging a fair economic model for digital publishing. We've had many ideas and proposals since then. Web Monetization is one idea which isn't dead yet. Its main ideas involve embedding a declarative link to a "payment pointer" (like a wallet address) where payments can be sent via Interledger. I say "sent", but "streamed" might be more accurate. Interledger is a novel idea which treats money as "packets" and routes small amounts around. Full disclosure: Igalia has been working on some prototype work in Chromium to help see what a native implementation would look like, what its architecture would be and what options this opens (or closes). Our work has been funded by the Interledger Foundation. It does not amount to an endorsement, and it does not mean something will ship. That said, it doesn't mean the opposite either. </p>
  <p>You might know that Brave, another Chromium-based browser, has system for creators too. In their model, publishers/creators sign up and verify their domain (or social accounts!), and people browsing those with Brave browsers sort of keep track of that locally, and at the end of the month Brave can batch up and settle accounts of Basic Attention Tokens ("BAT") which they can then pay out to creators in lump sums. As of the time of this writing, Brave has 88 million monthly active users (<a href="https://brave.com/transparency/">source</a>) who could be paying its 1.67 million plus content creators and publishers (<a href="https://creators.brave.com/">source</a>).</p>
  <p>Finally, in India, UPI offers most transactions free of charge and can also be used for micro payments - it's being used in $240 billion USD / month worth of transactions!</p>
  <p>But there's also some "adjacent" stuff that doesn't claim to be micro transactions but somehow are similar:</p>
  <p>If you've ever used Microsoft's Bing search engine, they also give you "points" (I like to call them "Bing Bucks") which you can trade in for other stuff (the payment is going in a different direction!). There was also <a href="https://en.wikipedia.org/wiki/Scroll_(web_service)">Scroll</a>, years ago, which was aimed to be a kind of <a href="https://www.theverge.com/2020/1/29/21113003/scroll-subscription-service-publisher-web-cookie-hack">universal service you could pay into to remove ads on many properties</a> (it was bought by Twitter and shut down.)</p>
  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">Enter: Offerwall</h2>
    <p>Just the other day, Google Ad Manager gave a new idea a potentially <em>really</em> signficant boost. I think it's worth looking at: <a href="https://blog.google/products/ads-commerce/offerwall-gives-publishers-more-options-audiences-more-control/">Offerwall</a>. Offerwall lets sites provide potentially <em>a few</em> ways to monetize content, and for users to choose the one that they prefer. For example, a publisher can set up to allow reading their site in exchange for watching an ad (similar to YouTube's model). That's pretty interesting, but far more interesting to me, is that it integrates with a third-party service called <a href="https://www.supertab.co/faq">Supertab</a>. Supertab lets people provide their own subscriptions - including a tiny fee for this page, or access to the site for some timed pass - 4 hours, 24 hours, a week, etc. It does this with pretty friction-less wallet integration and by 'pooling' the funds until it makes sense to do a real, regular transaction. Perhaps the easiest thing is to <a href="https://www.supertab.co/examples">look at some of their own examples</a>.</p>
    <p>Offerwall also allows other integrations, so maybe we'll see some of these begin to come together somehow too.</p>
    <p>It's a very interesting way to split the difference and address a few complaints of micro transaction critics and generally people skeptical that something could gain significant traction. More than that even, it seems to me that by integrating with Google Ad manager it's got about as much advantage as anyone could get (the vast majority of ads are already served with Google Ad manager and this actually tries to expand that).</p>
  </section>
  <p>I'm <em>very</em> keen to see how this all plays out! What do you think will happen? Share your thoughts with me on <a href="https://bkardell.com/links">social media</a>.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Houdini Re-Revisted]]></title>
        <id>https://bkardell.com/blog/HoudiniReRe.html</id>
        <link href="https://bkardell.com/blog/HoudiniReRe.html">
        </link>
        <updated>2025-05-02T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Recent presentations at BlinkOn strike some familliar notes. Seems a common theme, ideas come back.]]></summary>
        <content type="html"><![CDATA[ 
  <h1 class="contextual-heading" style="font-size: 2rem;">Houdini Re-Revisted</h1>
  <p class="segue">Recent presentations at BlinkOn strike some familliar notes. Seems a common theme, ideas come back.</p>
  <p>Since I joined Igalia in 2019, I don't think I've missed a BlinkOn. This year, however, there was a conflict with the W3C AC meetings and we felt that it was more useful that I attend those, since Igalia already had a sizable contingent at BlinkOn itself and my <a href="https://youtu.be/ptXY45HlQ6U">Web History talk with Chris Lilley</a> was pre-recorded. </p>

  <p>When I returned, and videos of the event began landing, I was keen to see what people talked about. There were lots of interesting talks, but one jumped out at me right away: Bramus gave one called "<a href="https://www.youtube.com/watch?v=njdiu83do0M">CSS Parser Extensions</a>" - which I wasn't familliar with, so was keen to see. Turns out it was just very beginnings of him exploring ideas to make CSS polyfillable. </p>

  <p>This talk made me sit up and pay attention because, actually, it's really how I came to be involved in standards. It's the thing that started a lot of the conversations that eventually became the Extensible Web Community Group and the <a href="https://extensiblewebmanifesto.org">Extensible Web Manifesto</a>, and ultimately <a href="https://www.youtube.com/watch?v=sE3ttkP15f8">Houdini</a>, a joint Task Force of the W3C TAG and CSS Working Group (in fact, I am also the one who proposed the name ✨). In his talk, he hit on many of the same notes that led me there too.</p>

  <p>Polyfills are really interesting when you step back and look at them. They can be used to make the standards development, feedback and rollout so much better. But CSS is almost historically hostile to that approach becauase it just throws away anything it doesn't understand. That means if you want to polyfill something you've got to re-implement lots of stuff that the browser already does: You've got to re-fetch the stylesheet (if you can!) as text, and then bring your own parser to parse it, and then... well, you still can't actually realistically implement many things.</p>

  <p>But what if you could?</p>

  <p>Houdini has stalled. In my mind, this mainly due to <em>when</em> it happened and <em>what it chose to focus on shipping first</em>. One of the first things that we all agreed to in the first Houdini meeting was that we expose the parser. This is true for all of the reasons Bramus discussed, and more. But that effort got hung up on the fact that there was a sense we first needed a typed OM. I'm not sure how true that really is. Other cool Houdini things were, I think, also hung up on lots of things that were being reworked at the time, and resource competition. But I think that the thing that really <em>killed it</em> was just what shipped first. It was not something that might be really useful for polyfilling, like custom functions or custom media queries or custom pseduo classes, or very ambitiously, something like custom layouts --- but custom paint. The CSS Working Group doesn't publish a lot of new "paints". There are approximately 0 named background images, for example.  There's no <code>background-image: checkerboard;</code> for example.  But the working group does publish lots of those other things like functions or psueudo classes. See what I mean? Those other things were part of the real vision - they can be used to make cow paths. Or, they can be used to show that, actually, nobody wants that cow path. Or, if it isn't - It can instead rapidly inspire better solutions..</p>

  <p>Anyway, the real challenge with most polyfills is performance. Any time that we're going to step out of "60 fps scrollers" into JS land that's iffy... But not impossible, and if we're honest, we'd have to admit that the truth is that our current/actual attempts to polyfill are definitely worse than something <em>closer</em> to native. With effort, surely we can at least improve things by looking at where there are some nice "joints" where we can cleave the problem.</p>
  <p>This is why in recent years I've suggested that perhaps what would really benefit us is a few custom things (like functions) and then just enabling CSS-like languages, which can handle the fetch/parse problems and perhaps give us some of the most basic primitive ideas.</p>
  <p>So, where will all of this go? Who knows - but I'm glad some others are interested and talking about some of it again. </p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Operation]]></title>
        <id>https://bkardell.com/blog/Operation.html</id>
        <link href="https://bkardell.com/blog/Operation.html">
        </link>
        <updated>2025-04-25T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Some short thoughts on recent antitrust and the future of the web platform...]]></summary>
        <content type="html"><![CDATA[
  <h1 class="contextual-heading" style="font-size: 2rem;">Operation</h1>
<p class="segue">Some short thoughts on recent antitrust and the future of the web platform...</p>

<p>Last week, in a <a href="https://www.documentcloud.org/documents/25900111-google-ad-antitrust-ruling/">115 page US Antitrust ruling</a> a federal judge in Virginia found that Google had  <em>two more</em> monopolies, this time with relation to advertising technolgies.  Previously, you'll recall that we had rulings related to search.  There are still more open cases related to Android.  And it's not <em>only</em> in the US that similar actions are playing out.</p>
<p>All of these cases kind of mention one another because the problems themselves are all deeply intertwined - but this one is really at the heart of it: That sweet, sweet ad money. I think that you could argue, reasonably, that pretty much everything else was somehow in service of that.  </p>
<p>Initially, they made a ton of money showing ads <em>every time someone searches</em>, and pretty quickly signed a default search deal with Mozilla to drive the number of searches way up.</p>
<p>Why make a browser of your own?  To drive the searches that show the ads, but also keep more of the money.</p>
<p>Why make OSes of your own, and deals around things that need to be installed? To guarantee that all of those devices drive the searches to show the ads.</p>
<p>And so on...</p>
<p>For a long time now, I've been trying to discuss what, to me, is a rather worrying problem: That those default search dollars are, in the end, what funds the whole web ecosystem.  Don't forget that it's not <em>just</em> about the web itself, it's about the platform which provides the underlying technology for just about everything else at this point too.  </p>
<p>Between years of blog posts, a <a href="https://youtube.com/playlist?list=PL_BRVuWxk8spg9XL-XUPSptJNrC6y3y9e&amp;feature=shared">podcast series</a>, several talks, experiments like <a href="https://bkardell.com/blog/OpenPrioritization.html">Open Prioritization</a> I have been thinking about this <em>a lot</em>.  Untangling it all is going to be quite complex. </p>
<p>In the US, the governments proposed remedies touch just about every part of this.  I've been trying to think about how I could sum up my feelings and concerns, but it's quite complex.  Then, the other day <a href="https://arstechnica.com/tech-policy/2025/04/chrome-on-the-chopping-block-as-googles-search-antitrust-trial-moves-forward/?utm_source=bsky&amp;utm_medium=social">an article on arstechnica</a> contained an illustration which seemed pretty perfect..</p>
<figure class="captioned-image">
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2025/04/google-monoperation-game-2048x1152.jpg">
    <figcaption>A "game" board that looks like the game Operation, but instead of pieces of internal anatomy there are logos for chrome, gmail, ads, adsense, android and on the board it says "Monoperation: Skill game where you are the DOJ" and the person is removing chrome, and a buzzer is going ff</figcaption>
</figure>

<p>This image (credited to Aurich Lawson) kind of hit the nail on its head for me: I deeply hope they will be absoltely <em>surgical</em> about this intervention, because the patient I'm worried about isn't Google, it's the whole Web Platform.</p>

<p class="note">
  If this is interesting to you, my colleague Eric Meyer and I posted an Igalia Chats podcast episode on the topic: <a href="https://www.igalia.com/chats/adpocalypseNow">Adpocalypse Now?</a>
</p>

]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Breakouts 2025: Collective]]></title>
        <id>https://bkardell.com/blog/Breakouts2025.html</id>
        <link href="https://bkardell.com/blog/Breakouts2025.html">
        </link>
        <updated>2025-03-31T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[The other day was W3C Breakouts Day: Effectively, an opportunity for people to create sessions to talk about or work on anything related to the Web.  We do this twice a year.  Once entirely virtually (last week) and then again during hybrid meetings in association with W3C's biggest event of the year, called "TPAC".]]></summary>
        <content type="html"><![CDATA[
	<h1 class="contextual-heading" style="font-size: 2rem;">Breakouts 2025: Collective</h1>
<p class="segue">The other day was <a href="https://www.w3.org/2025/03/breakouts-day-2025/">W3C Breakouts Day</a>: Effectively, an opportunity for people to create sessions to talk about or work on anything related to the Web.  We do this twice a year.  Once entirely virtually (last week) and then again during hybrid meetings in association with W3C's biggest event of the year, called "TPAC".</p>

<p>This year there were 4 blocks of sessions with 4-5 sessions competing concurrently for the same time slot. There were 2 in the morning that I'd chosen, but then realized that I had calendar conflicts with other meetings and wound up missing them.</p>

<p>In the afternoon there were 3 sessions proposed by Igalians - unfortunately two of them simulteneously:</p>
<ul>
<li><a href="https://github.com/w3c/breakouts-day-2025/issues/12">Vectors of Neglect</a> - about SVG, led by Eric Meyer.</li>
<li><a href="https://github.com/w3c/breakouts-day-2025/issues/14">Revisiting in-band text tracks in MediaSource Extensions</a>, led by Alicia Boya Garcia</li>
<li><a href="https://github.com/w3c/breakouts-day-2025/issues/11">Collective funding, governance and prioritization of a browser engine projects</a>, led by myself and Stephanie Stimac</li>
</ul>
<p>There were actually several in that timeslot that I wanted to attend but the choice was pretty straightforward: I'd attend mine and Eric's. Unfortunately I did a bad job chairing and forgot to assign a scribe or record a presentation.</p>

<p>Eric's session told the story of SVG and how, despite it getting a lot of love from developers and designers and other working group participants, it just didn't get a lot of love or investment from the browser vendors themselves. Amelia Belamy-Royd's (former editor/chair) told us about how things ultimately stalled out around 2020 with so much left undone, burnout, disappointments, and a W3C working group that was almost closed up with a note last year before being sort of "rescued" at the last minute with a very targeted rechartering. However, that rechartering still hasn't resulted in much - no new meetings, etc. We talked about how Igalia has been investing, along with companies like Wix, in trying to help move things forward. Then the question was: How can we move it forward, together? You can read <a href="https://www.w3.org/2025/03/26-svg-neglect-minutes.html">the minutes</a> for more, but one idea was a collective around SVG.</p>

<p>I mention this because while might they <em>seem</em> at first like pretty different topics, Eric's session and my own are really just two things raising the same overarching question: <em>Why have we built the infrastructure of the whole web ecosystem to be fundamentally dependent on the funding and prioritization of a few private organizations?</em>. And - <em>how can we fix that?</em>.</p>

<p>My session presented some things we've done, or tried so far.</p>

<section class="sectioning">
	<h2 class="contextual-heading" style="font-size: 2.5rem;">Things we're trying...</h2>
	<p>First, just moving from proprietary projects to open source has helped a bit.  Instead of one organization being 100% responsible, the stewards themselves today contribute "only" ~80 to 95% of the commits.</p>

	<div style="display: grid; grid-template-columns: 1fr 1fr 1fr;">
      <img src="/media/2023/moz.svg" style="width: 100%" title="mozilla-central - mozilla contributed 87.2% of commits">
      <img src="/media/2023/apple-webkit.svg" style="width: 100%" title="webkit - apple contributed 78.1% of commits">
      <img src="/media/2023/google-chrome.svg" style="width: 100%" title="chromium - google committed 95.5% of commits">
    </div>


	<p>My company Igalia is among the top few committers to all of the web engine projects every year for at least half a decade, and we have many ways that we try to diversify work upstream. What's interesting about attempts to diversify funding is that there is a kind of a spectrum here relating to both the scope of what we're tackling and how well understood the approach is...</p>

	<div class="spectrum">
		<span>one sponsor/single issue</span>
		<span>collective/whole project</span>
	</div>
	
	<p>On the left is a single sponsor with very specific/measurable tasks. This could be a list of bugs, or implementation of a pretty stable feature in a single engine. You can contract Igalia for stuff like this - The <code>:has()</code> implementation and proof-of-concept that moved the needle in Chromium, for example, was sponsored by EyeO. CSS Grid in Blink and WebKit was sponsored by Bloomberg Tech. <em>We know how to do this</em>. We've got lots of practice.</p>

	<p>Moving slightly more 'right', we have things like our <a href="https://www.smashingmagazine.com/2020/07/crowdfunding-web-platform-features-open-prioritization/">Open Priortization</a> which is trying to decide how to prioritize and share a funding burden. We know less of how to do this, we learned things with the experiment, but we've not repeated it because it involved a lot of "extra" work.</p>

	<p>Then there's our efforts with MathML, funded by grants, then partnerships, then a collective aimed at generally advancing and maintaining MathML support in browsers.  That's now involving more decision making - there's not a tight list of tasks or even a specific browser.  You need to take in money to find out how much budget you have, and then try to figure out how to use it.  In this case, there's a steering committee made up of the biggest funders. Every 6 months or so there is a <a href="https://opencollective.com/mathml-core-support/updates/mathml-h1-report-2024">report of the work that was done submitted for payment</a>. Is that a great model?</p>
	

	<p>We also have Wolvic, which attempted to have partnerships and a collective, with a model where if you put in a kind of minimum amount every 6 months then you would get invited to a town hall to discuss how we'd prioritize the spending of available funds.  Is that a great model?  The thing I like about it is that it binds things to some kind of reality. It's great if someone gave $500, for example, but if 10 other orgs also did so and they all want different things, none of which we can do with the available funds... At least they can all help decide what to do.  In that model, the input is still only informative - it's ultimately Igalia who decides.</p>
	
	<p>Or, you might have seen a new thing hosted at the Linux Foundation for <a href="https://www.linuxfoundation.org/press/linux-foundation-announces-the-launch-of-supporters-of-chromium-based-browsers">funding work in Chromium</a>.  That's more formal, but kind of similar in challenges. Unfortunately there was no one attending our sessions who could talk about it - I know a bit more, but I'm not going to break news on my blog :). We'll have a podcast about it when we can.</p>
	
	<p>Or, a little further right there's <a href="https://openwebdocs.org">Open Web Docs (OWD)</a>, which I'm pleased <em>does</em> seem to be succeeding at sponsoring some real work and doing real prioritization.  Florian from OWD was there and was able to give us some real thoughts.  They too are drawing now from grants like Soverign Tech Fund.  They produce as part of this an <a href="https://openwebdocs.org/content/reports/2024/">Impact Report</a>.</p>

	<p>Or, maybe all the way to the right you have a general browser fund like <a href="https://servo.org/sponsorship/">Servo</a>.  There it is the Technical Steering Committee that decides what to do with the funds.</p>

	<p>A lot of this thinking is currently still pretty esoteric because, for example, through the <em>collective</em>, Servo isn't taking in enough money for even a single full time employee. I also mentioned our work with Interop, and the fact that even with that level of effort to priortize, it is very difficult to not wind up taking resources away from actual work in order to figure out which work to potentially do! It's hard to not add admin costs that eat away at the overall progress. But that's exactly why we should be talking about these things now. How can we make this work?</p>
</section>

<section class="sectioning">
	<h2 class="contextual-heading" style="font-size: 2.5rem;">The Actual Discussion</h2>
	<p>As I said, we didn't have a scribe, but there was some discussion I can attempt to summarize from the queue I can still see in IRC.</p>

	<section class="q sectioning">
		<h3 class="contextual-heading" style="font-size: 3rem;">Q. Do you think the W3C has a role to play?</h3>
		<p>That's why I brought it here. My own <em>desire</em> would be yes.  There are some venues where working groups and interest groups are encouraged to pool funds and so on - but the W3C isn't currently one of them and I'm unsure how others feel. It's a thing I have been trying to pitch for a few years now that we could figure out.</p>
		
		<p>The Wolvic model that I described above was born from thoughts around this. What if W3C groups had the ability to put money into a common fund and then at the end of the year they could decide how to deploy it. Maybe sometimes that would be for tools. Maybe sometimes that would be for fixing bugs. Maybe sometimes that would be for new implementation, or last implementation, or supporting spec authorship. But it would always be grounded on something real about collaboration that puts at <em>some</em> degree of power beyond the implementers. Maybe that would mean that print CSS would inch along at a snail's pace - but at least it's better than not at all, and it shows a way. At least it doesn't seem like the group isn't even picking up the phone.</p>

	</section>

	<section class="q sectioning">
		<h3 class="contextual-heading" style="font-size: 3rem;">Q. Are engines like Servo and Ladybird filing implementation reports? WPT?</h3>

		<p>Basically... Not exactly. The main thrust is that both engines <em>do</em> make themselves available on Web Platform Tests and closely track their scores. That said, the models differ quite a bit in their approach and Ladybird, for example, generally is more focused from the outside in. It's possible they only start with 25% of the standard required to load a certain page. So, at what point would they submit an impact report? Both projects <em>do</em> currently open issues when they find implementation related questions or problems, and both have the ability to expand the test suites in response to those issues. So, effectively: Nobody has time for that level of formality, but they're following the spirit of it.</p>
	</section>

	<section class="q sectioning">
		<h3 class="contextual-heading" style="font-size: 3rem;">Q. Doesn't it help to have a thing you can measure if you approach someone to ask for money?</h3>

		<p>Yes, that is the whole point of my spectrum above. The further right you move, the more of a question this is. On our podcast, for example, we've asked people "Why don't you donate to Mozilla?" and the main answer given is always "I don't know what they'll spend it on, but probably not things I would agree with".  The more people putting in, the more there is to balance or require trust. Currently a lot of these work for grants or more specific/finite problems which do reports of success - like the one I provided above for MathML or the implementation report in OWD.</p>

		<p>But does it mean there <em>shouldn't</em> be more general funds?  Currently the general funds come from default search and wind up with a single org to decide - is it what we want?</p>
	</section>
</section>
	<p>So, that's all that was discussed. All in all, it was pretty good - but I'm slightly disappointed there wasn't a little more discussion of how we could collectively govern or priortize, or even if we all agreed that that's something that we want.  I'd love to hear any of your thoughts! </p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[11ty Math]]></title>
        <id>https://bkardell.com/blog/11tyMath.html</id>
        <link href="https://bkardell.com/blog/11tyMath.html">
        </link>
        <updated>2025-03-12T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Markdown, LaTex and ASCII - who writes HTML?]]></summary>
        <content type="html"><![CDATA[
	<h1 class="contextual-heading" style="font-size: 2rem;">11ty Math</h1>
	<p class="segue">Markdown, LaTex and ASCII - who writes HTML?</p>
	<script src="../prism.js"></script>
    <link rel="stylesheet" href="../prism.css">
    <link rel="stylesheet" href="https://fred-wang.github.io/MathFonts/STIX/mathfonts.css">
    
	<p>Very nearly none of the content that we encounter online is entirely hand authored from opening doctype to closing HTML tag - it's assembled.  We have layouts, and includes and templates and so on.  And, most of the actual <em>content</em> that we produce and consume is written in some more familiar or easier to write shorthand.  For most of the people reading this, it's probably mostly markdown.</p>

	<p>But did you know that lots of the places that you use markdown <a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/writing-mathematical-expressions">like GitHub</a> and GitLab, and <a href="https://code.visualstudio.com/docs/languages/markdown">Visual Studio</a> support embedding mathematical expressions written in LaTex surrounded by <code>$</code> (inline) or <code>$$</code> (block)? Those are then transformed for you to rendered Math with MathML?</p>

	<p>It got me thinking that we should have a kind of similarly standard easy setup for 11ty.  It would be a huge win to process it on the server, MathML will render natively, fast, without FOUC. It will be accessible, styleable, scale appropriately with text-size and zoom and so on.</p>

	<p>The super interesting thing to note about most of the tools where you can use markup is that so many of them are built on common infrastructure: <a href="https://github.com/markdown-it/markdown-it">markdown-it</a>.  The architectural pattern of markdown-it allows people to write plugins, and if you're looking to match those above, you can do it pretty easily with the <a href="https://www.npmjs.com/package/@mdit/plugin-katex">@mdit/plugin-katex</a>:

	</p><pre><code class="language-javascript">/* eleventy.config.js */
const markdownIt = require("markdown-it");

module.exports = async function (eleventyConfig) {

  const { katex } = (await import("@mdit/plugin-katex"));
  eleventyConfig.setLibrary(
  	"md", 
  	markdownIt().use(katex, {output: "mathml"})
  );

}</code></pre>

	<p>And... That's it.  Now you can embed LaTex math in your markdown just as you can in those other places and it will do the work of generating fast, native, accessible, and styleable MathML...

	</p><pre><code class="language-html">Some math  $\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1$ whee.</code></pre>

	<p>Yields...</p>
	<pre><code class="language-html">&lt;p&gt;Some math <span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;msup&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;msup&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mfrac&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mfrac&gt;&lt;msup&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding="application/x-tex"&gt;\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt; whee.&lt;/p&gt;</span></code></pre>

	<p>Which your browser renders as...</p>

	<div class="example">
		<p>Some math inline <span class="katex"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msup><mi>x</mi><mn>2</mn></msup><msup><mi>a</mi><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><msup><mi>y</mi><mn>2</mn></msup><msup><mi>b</mi><mn>2</mn></msup></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1</annotation></semantics></math></span> whee.</p>
	</div>

	<p>Surrounding the math part alone with <code>$$</code> instead yields block math, which renders as..</p>

	<p class="katex-block"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><msup><mi>x</mi><mn>2</mn></msup><msup><mi>a</mi><mn>2</mn></msup></mfrac><mo>+</mo><mfrac><msup><mi>y</mi><mn>2</mn></msup><msup><mi>b</mi><mn>2</mn></msup></mfrac><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1</annotation></semantics></math></p>


	<div class="note">
  	Mathematical fonts are critical for rendering.  We <strong>almost</strong> have universally good default math fonts, but <strong>some</strong> operating systems (eyes Android disapprovingly) still don't.  However, like me you can include some CSS to help. On this page I've included 
  	<pre><code class="language-html">&lt;link  href="https://fred-wang.github.io/MathFonts/STIX/mathfonts.css" /&gt;</code></pre>.
  	<br> You can <a href="https://developer.mozilla.org/en-US/docs/Web/MathML/Authoring#mathematical_fonts">read a lot more about this on MDN</a>. 


	</div>


	<section class="sectioning">
		<h2 class="contextual-heading" style="font-size: 2.5rem;">AsciiMath Math / Mathup</h2>
		<p>While LaTeX is by far the most common way that people author math, there are people who prefer AsciiMath.  Rúnar Berg Baugsson Sigríðarson (<a href="https://github.com/runarberg">@runarberg</a>) has a nice <a href="https://runarberg.github.io/mathup/#why-not-tex">explanation as to why they prefer to not use TeX</a>.</p>

		<p>His mathup package seems pretty nice (an AsciiMath dialect more than just AsciiMath), and there is also a corresponding  <a href="https://github.com/runarberg/markdown-it-math">markdown-it-math</a> which is similarly easy to use...</p>

	<pre><code class="language-javascript">/* eleventy.config.js */
const markdownIt = require("markdown-it");

module.exports = async function (eleventyConfig) {
  const markdownItMath = 
  	(await import('markdown-it-math')).default;

  eleventyConfig.setLibrary(
    "md", 
    markdownIt().use(markdownItMath)
  );
}</code></pre>
	
	<p>Then, you can embed AsciiMath in your markdown, fenced by the same <code>$</code> or <code>$$</code> and it will generate some nice MathML. For example...</p>

	<pre><code class="language-html">$$
e = sum_(n=0)^oo 1/n!
$$</code></pre>


	<p>Will be transformed at build time and render in your browser as...</p>

	<math display="block"><mi>e</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mfrac><mn>1</mn><mrow><mi>n</mi><mo>!</mo></mrow></mfrac></math>

	<p class="note">Make sure you get markdown-it-math 5.0.0-rc.0 or above or this won't work.  You might also consider including <a href="https://cdn.jsdelivr.net/npm/mathup/dist/mathup.css">their stylesheet</a>.</p>

	<p class="note">markdown-it-math also supports a nice pattern for easily integrating other engines for embedded transformations like Ron Kok's <a href="https://temml.org/">Temml</a> or Fred Wang's <a href="https://fred-wang.github.io/TeXZilla/">TeXZilla</a>.</p>

	</section>


	<section class="sectioning">
		<h2 class="contextual-heading" style="font-size: 2.5rem;">Unicode Math</h2>
		<p>There is also Unicode Math, which Murray Sargent III developed and had integrated into all of the Microsoft products.  It's pretty nifty too if you ask me. This repo has a nice <a href="https://github.com/MurrayIII/UnicodeMathML/tree/main?tab=readme-ov-file#how-does-its-syntax-compare-to-asciimath-latex-and-mathml">comparison of the three</a>.</p>

		<p>Unfortunately there is no npm module for it (<a href="https://github.com/doersino/UnicodeMathML/issues/5">yet</a>), so for now, unfortunately that remains an open wish.</p> 
	</section>

	<p>So, that's it.  Enjoy.  Mathify your static sites.</p>

	<p class="note">Before you go... The work of Math rendering in browsers is <em>severely</em> under funded.  Almost none of the effort or funding over the last 30 years to make this possible has come from browser vendors, but rather from individual contributors and those willing to help fund them.  If you appreciate the importance of this work, please consider helping to <a href="https://opencollective.com/mathml-core-support">support the work</a> with a small monthly donation, and please help us to publicly lobby implementers to invest in it.</p>

]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Link in Bio]]></title>
        <id>https://bkardell.com/blog/LinkInBio.html</id>
        <link href="https://bkardell.com/blog/LinkInBio.html">
        </link>
        <updated>2025-02-06T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[Embracing an IndieWeb thing...]]></summary>
        <content type="html"><![CDATA[
  <h1 class="contextual-heading" style="font-size: 2rem;">Link in Bio</h1>
  <p class="segue">Embracing an IndieWeb thing...</p>

  <p>Over the years, I've been there as things have come and gone on the interwebs. I had accounts on AIM, MySpace, Blogger, FaceBook, WordPress, Google Plus, Twitter, Instagram, and plenty more.  On each one, I wind up with a profile where I want to link people to other places I am online - and those places don't always make it easy to do that.  So, something short and memorable that you could even type if you had to is ideal - like a handle: @briankardell or @bkardell or, in the end: bkardell.com is pretty great.</p>

  <p>Back in 2016, some folks felt the same frustration and instead created this <a href="https://en.wikipedia.org/wiki/Linktree">Linktree</a> thing.  But... It's just like, a fremium thing that gives you <em>the most basic single page website ever</em>?  Yes, and today they have 50 million users and are valued at $1.3 billion - that's a value of $26/user. I mean, I found that amazing.</p>

  <p>But, here's the thing: After a while I realized that there's something to it.  Not the business model, specifically, but the link in bio idea.  The link in bio is generally not a great website on its own, but it's a page where people can pretty quickly navigate to the thing they're looking for without other noise or fluff.  Which is something that a home page often isn't.  So,  I've learned to really appreciate them, actually.</p>

  <p>Back in about 2020, some IndieWeb folks began <a href="https://indieweb.org/Linktree">thinking about, criticizing and brainstorming around it too</a>.  They began writing about <a href="https://indieweb.org/link_in_bio">Link in Bio</a>, and why it might be useful to have your own version.  There are several examples of people doing something similar.</p>

  <p>Recently a bunch of things smashed together in my mind.  First, on ShopTalk, I heard Chris and Dave talking about "<a href="https://shoptalkshow.com/647/">slash pages</a>" (pages right off the root domain with <a href="https://slashpages.net/">well known names</a>).  Second, I've been working on social media plans - getting away from some platforms and moving to others and thinking about these problems.  An IndieWeb style `/links` page, that adds <code>rel="me"</code> links is a really nice, simple way to achieve a whole lot of things if we'd all adopt it - not the least of which is that it's an evergreen link, almost as simple as a handle, to where people can find you should you choose to leave...</p>

  <p>So, starting with me, and Igalia, you can find our links at <a href="https://bkardell.com/links">bkardell.com/links</a> and <a href="https://igalia.com/links">igalia.com/links</a> respectively.</p>

  <figure class="captioned-image">
    <img src="/media/2025/bye.png">
    <figcaption>A screenshot of Igalia's post with a sunset and birds flying away, linking to our /links page</figcaption>
  </figure>


]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interop and Hard Problems]]></title>
        <id>https://bkardell.com/blog/debt.html</id>
        <link href="https://bkardell.com/blog/debt.html">
        </link>
        <updated>2024-11-24T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[Let's talk about priorities, technical debt and hard problems in the Web Platform...]]></summary>
        <content type="html"><![CDATA[
	<h1 class="contextual-heading" style="font-size: 2rem;">Interop and Hard Problems</h1>
	<p class="segue">Let's talk about priorities, technical debt and hard problems in the Web Platform...</p>

	<p>In many ways, browser engine projects are not that different from most other software projects.  The "stewards" still have teams with managers and specializations and budgets and people out on leave, and so on.  They have to prioritize and plan.  And just like every other project I've ever seen, they face the same kinds of pressures and problems:  There are never enough resources for everything, there are always new asks, they always accumulate tech debt, and sometimes there are really hard problems.</p>

	<p>What <em>is</em> perhaps special about them is that they are trying to be more than just an isolated program: They're trying to contribute to a standard, interoperable platform.  The catch, for us, is that we only reap the benefit when something makes it all the way through <em>all</em> of the team's independent priority gauntlets, get shipped widely, and so on.</p>

	<p>This can be kind of painful to experience.</p>
	
	<p>For example, consider the <code>&lt;details&gt;</code> element. It's literally the simplest possible interactive element. Here's how we got it:</p>

	<ul>
	<li>In June 2011, Chrome shipped <code>&lt;details&gt;</code>.</li>
	<li>A year later, in July 2012, Safari shipped it.</li>
	<li>Another year later in July 2013, Opera shipped it.</li>
	<li>Still another three years later, in September 2016, Firefox shipped it</li>
	<li>Microsoft <em>never</em> implemented it - we finally got the last implementation when Edge moved to Chromium in 2020.</li>
	</ul>
	<p>If you're counting, that's <em>nine</em> years it took to reach shipping in all browsers. The newly defined "<a href="https://web.dev/baseline">Baseline Widely Available</a>" which indicates roughly when something should have reached as close to 100% market-share/deployment as possible would take another three... So, more or less, that happened last year.</p>

	<p>And that's just the <em>initial</em> and <em>appealing</em> part. Then there are, of course, bugs discovered, new tests added, and ultimately feature improvements and iterations and so on.  Even currently there are newly failing tests that make support for <code>&lt;details&gt;</code> ragged as we've tried to improve things like find-in-page and and add new concepts like invokers.</p>


	<p>As time goes by, we're accumulating squares in the feature grid and new "gaps" in it faster than we're filling them.  We're accumulating tech debt. </p>


	<section class="sectioning">
		<h2 class="contextual-heading" style="font-size: 2.5rem;">Enter Interop</h2>
		
		<p>Interop <em>was</em> originally intended as a way to pay down, that debt:  Let's pick some things to prioritize together and turn all of the little red failure squares green.  But prioritizing is tricky.</p>

		<p>We'll get <em>very roughly</em> around 100 submissions of what we should focus on every year.  But Interop is merely allowing browser makers to agree on how to focus and prioritize on some of the same things.  The resources themselves are still finite.  That means that prioritizing some things inevitably means <em>not</em> prioritizing something else.</p>

		<p>And, there are a lot of competing pressures about what to prioritize, and why.</p>

		<p>For example: It is <em>super</em> effective for developers if we can focus <em>initial</em> developments together.  Imagine if we could have delivered <code>&lt;details&gt;</code> across the board and very high quality in 2011, or 2012.</p>

		<p>Focusing together on a few new features has other added benefits too.  People are more excited to work on it for one.  We also get everyone talking about the same things at the same time, that's helpful - nobody misses the big event. It means use will grow faster, etc.  It gives us something a like ECMA annual editions.  So, it's a little unsurprising that <a href="https://wpt.fyi/interop-2024">last year, Interop</a> included areas like CSS nesting, popover, relative color syntax, declarative shadow DOM.</p>

		<p>However - at the other end of the spectrum, there are lots of things which are already very ragged.  These things are damned hard to prioritize. They're all over the map. They are of obviously different, and debatable kinds of value, to sometimes very different communities. They can also incur different costs on different engines, and so on.</p>

		<p>All of this conspires together to create  some perennially hard problems.  They continue to be needs, sometimes for <em>exceedingly</em> long times.</p>

	</section>
	<section class="sectioning">
		<h2 class="contextual-heading" style="font-size: 2.5rem;">Perennially Hard Problems</h2>
		
		<p>This year, I'm making the case that we <em>need</em> to find a way to prioritize those perennially hard problems which, for whatever reason, we can never seem to prioritize.  Perhaps every 5, 7 or 10 years we we should focus on these kinds of projects.</p>

		<p>If you've been reading my blog or listening to our podcast, then you're already aware that MathML and SVG are probably the biggest examples of this kind of problem.  Both are among the oldest web specifications, having their first versions published about the same time as HTML 4.0 and CSS 2.  They were specially integrated with the HTML parser, and are integrated into the HTML Living Standard (<a href="https://html.spec.whatwg.org/#mathml">MathML</a>, <a href="https://html.spec.whatwg.org/#svg-0">SVG</a>).</p>


		<p style="font-weight: bolder;">Yet both are historically dramatically under-funded and much of the actual work on them have been funded by volunteers and non-steward organizations!  26 years later we're still struggling to find the will to cross some important last miles.</p>  

		<p>Thus, every year, we have submissions about both for Interop.</p> 

		<p>The 2024 State of HTML survey found that &lt;svg&gt; was the <a href="https://state-of-html-2024.onrender.com/en-US/features/content/">top content pain point cited by developers</a>, with almost double the pain attributed to “browser support”.  <code>&lt;svg&gt;</code> - that is the literal <code>&lt;svg&gt;</code> element, not including the other ways SVGs can be used - is used on <a href="https://rainy-periwinkle.glitch.me/permalink/831113a2f130c21a753ff9404067a47eaa893bc7fbc3f973a012d50e67123cf2.html">over 55% of HTML pages in the HTTP archive data</a>. Only 27 of HTML's roughly 130 elements are more popular.  SVG is also used heavily in embedded applications powered by Web engines.</p>

		<p>A lot of math content is in more specific sites like arXiv and Wikipedia, which each have millions and millions of equations, or in online education or books.  The HttpArchive crawl isn't the best way to measure that since it is focused mainly on public home pages where there's not likely to be a lot of math.  However, even in the crawl, we still see thousands of pages do load 2 of the most popular JavaScript libraries which are bridging the gaps instead of rendering native math.  This hurts performance and is unique - we don't require JavaScript to render <em>text</em>.  We also know that numerous document editing tools like Adobe Indesign and Microsoft Word support MathML.  Those are complex applications which require a lot of script already, and lacking good support means that they have to load even more.</p>

		<p>Igalia has contributed implementations and improvements with funding from others and ourselves.  Every year we have invested a bit ourselves to keep things moving forward.  But it moves <em>slowly</em> this way.  What we really need are some concerted efforts to push us across those last miles.  We'd go a lot farther, a lot faster, together.</p>

		<p>If you support the idea of some focus and push on these, please let us know - let vendors know. It might help.</p>

		<p>Of course, it might not too.  Historically, it's been difficult.  What we <em>know</em> works is for someone outside of vendors to do the work - or fund it.  Igalia will keep plugging away, but without external funding our own investments only go so far.  If your organization would benefit from these, consider financially sponsoring some work.  Alternatively, you can also <a href="https://opencollective.com/mathml-core-support">help fund work on MathML directly</a>.</p>
	</section>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Igalia: 2024 Mid-season Power Rankings]]></title>
        <id>https://bkardell.com/blog/2024-Midseason.html</id>
        <link href="https://bkardell.com/blog/2024-Midseason.html">
        </link>
        <updated>2024-09-27T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s take the good old annual look at how Igalia is stacking up so far in terms of Open Source contributions - you know, "The One With the Charts"]]></summary>
        <content type="html"><![CDATA[
  <h1 class="contextual-heading" style="font-size: 2rem;">Igalia: 2024 Mid-season Power Rankings</h1>
  

  <p class="segue">Let’s take the good old annual look at how Igalia is stacking up so far in terms of Open Source contributions - you know, "The One With the Charts"</p>

  <p>Igalia is involved in <em>so many</em> things it's honestly hard for me to keep track.  So, every now and then, I like to step back and take stock of it, and what it means to the open source ecosystem.  Let's have a look...</p>

  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">The Big Browser Projects</h2>
    <p>Some interesting shifts this year in browser projects and where we've made the biggest impacts.</p>

    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">chromium</h3>

      <p><a href="https://thenextweb.com/news/microsoft-edge-is-officially-switching-to-chromium-in-2019-heres-why-thats-a-good-thing">In 2018 Microsoft announced that they were switching to a Chromium based engine</a>. However, in 2019 it was Igalia (not Microsoft) who wound up with the most commits to Chromium (after Google).  We thought for sure that they would overtake us in 2020, but we also had the most commits in 2020. And in 2021, 2022 and 2023.  5 years later, after increases on their end and some shifts on ours, Microsoft has finally eclipsed us as the one with the most commits after Google.   Congratulations Microsoft!... Enjoy it!  For now :)</p>
    
      <figure>
          <img src="/media/2024/commits/chromium.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Microsoft</td><td>37.26%</td></tr><tr><td>Igalia</td><td>17.94%</td></tr><tr><td>Intel</td><td>12.41%</td></tr><tr><td>januschka.com</td><td>6.72%</td></tr><tr><td>Opera</td><td>6.09%</td></tr><tr><td>Samsung</td><td>1.69%</td></tr><tr><td>Bytedance</td><td>1.48%</td></tr><tr><td>LGE</td><td>0.90%</td></tr><tr><td>Anton Bershanskyi</td><td>0.79%</td></tr><tr><td>Md Hasibul Hasan</td><td>0.74%</td></tr></tbody></table></div>
          </details>
      </figure>
   
      <p>It's nice to see Intel and Opera stepping it up this year too!</p>

      <p>It seems impossible to not comment on the fact that &gt; 6.7% of commits this year are from a single individual, <a href="https://github.com/hjanuschka">Helmut Januschka</a> as mostly unpaid work. On the one hand, that's heroic but also, it feels a little exploitative, right? Multi-million, billion or even trillion dollar corporations with products built on chromium could surely fund a little more. If you work for one of those and would like to help change that...</p>

      <figure style="display:grid;">
        <img style="max-width: 400px;margin: auto;" src="/media/2024/commits/callme.gif" alt="">
      </figure>

      <p>Another distinction that is perhaps worth making is that this is measuring commits to the whole chromium project which is kind of a super project. The majority of the code (and commits) are in support of the browser (chromium is a also base browser implementation without some of the "Google" stuff that is in Chrome). These include graphics/rendering related standalone projects like SKIA, or wildvine for DRM, or things that deal with the different OS windowing systems (X/Wayland on Linux, for example), abstract plumbing for chromium based downstream.  On the engine itself, it's mainly just Google, Microsoft, Igalia, Intel and Opera.</p>

    </section>

    <section>
      <conextual-heading>WebKit</conextual-heading>
      <p>Still the number one contributors after Apple to WebKit 💪🏻💪🏼💪🏽💪🏾💪🏿.</p>

      <figure>
          <img src="/media/2024/commits/webkit.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>65.65%</td></tr><tr><td>Sony</td><td>16.40%</td></tr><tr><td>Ubie</td><td>3.19%</td></tr><tr><td>Red Hat</td><td>2.63%</td></tr><tr><td>softathome.com</td><td>1.16%</td></tr><tr><td>Rose</td><td>0.99%</td></tr><tr><td>Alexey Knyazev</td><td>0.73%</td></tr><tr><td>GitHub</td><td>0.73%</td></tr><tr><td>Ian Grunert</td><td>0.69%</td></tr><tr><td>cox.net</td><td>0.65%</td></tr></tbody></table></div>
          </details>
      </figure>

    </section>

    <section>
      <conextual-heading>Gecko</conextual-heading>
      <p>Hey look at that - Igalia moves into second place after Mozilla! I'm not sure how anyone could not observe that André Bargull
(@anba, a <a href="https://bugzilla.mozilla.org/user_profile?user_id=339940">contributor to Mozilla for 16 years!</a>) is just amazingly prolific and important to the project.  Mozilla has a long tail of almost 600 individual/unaffliated contributors!
</p>

      <figure>
          <img src="/media/2024/commits/mozilla-central.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>André Bargull</td><td>23.75%</td></tr><tr><td>Igalia</td><td>10.71%</td></tr><tr><td>Red Hat</td><td>8.74%</td></tr><tr><td>Birchill</td><td>6.19%</td></tr><tr><td>protonmail.com</td><td>5.66%</td></tr><tr><td>longsonr</td><td>3.38%</td></tr><tr><td>Jonatan Klemets</td><td>2.43%</td></tr><tr><td>yahoo.com</td><td>1.82%</td></tr><tr><td>Debadree Chatterjee</td><td>1.63%</td></tr><tr><td>Mugurell</td><td>1.52%</td></tr></tbody></table></div>
          </details>
      </figure>

    </section>

  </section>

  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">WHATWG Stuff</h2>
     <section>
      <conextual-heading>HTML</conextual-heading>
      <p>Would you expect Igalia to be #2 in HTML?  We are, this year! It's astounding the size of the role Google plays in a lot of this stuff, really.  Then again, they have the only economic model for it so it makes a lot of sense that they invest heavily - this is peanuts comparatively.</p>
      <figure>
          <img src="/media/2024/commits/html.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Google</td><td>40.12%</td></tr><tr><td>Igalia</td><td>14.37%</td></tr><tr><td>Apple</td><td>12.57%</td></tr><tr><td>Mozilla</td><td>3.59%</td></tr><tr><td>ibiblio.org</td><td>2.99%</td></tr><tr><td>w3.org</td><td>2.99%</td></tr><tr><td>Alex Rudenko</td><td>2.40%</td></tr><tr><td>serenityos.org</td><td>1.80%</td></tr><tr><td>meiert.com</td><td>1.80%</td></tr><tr><td>Tawanda Moyo</td><td>1.80%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    <section>
      <conextual-heading>DOM</conextual-heading>
      <p>What about DOM? Hey-o it's us again!  Good job Igalia!</p>
      <figure>
          <img src="/media/2024/commits/dom.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Google</td><td>40.12%</td></tr><tr><td>Igalia</td><td>14.37%</td></tr><tr><td>Apple</td><td>12.57%</td></tr><tr><td>Mozilla</td><td>3.59%</td></tr><tr><td>ibiblio.org</td><td>2.99%</td></tr><tr><td>w3.org</td><td>2.99%</td></tr><tr><td>Alex Rudenko</td><td>2.40%</td></tr><tr><td>serenityos.org</td><td>1.80%</td></tr><tr><td>meiert.com</td><td>1.80%</td></tr><tr><td>Tawanda Moyo</td><td>1.80%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>
  </section>

  <section>
      <conextual-heading>Web Platform Tests</conextual-heading>
      <p>It's almost like we're the 4th browser engine - #4 in contributions to Web Platform Tests, after Google, Mozilla, Apple. Go us!</p>
      <figure>
          <img src="/media/2024/commits/wpt.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Google</td><td>45.51%</td></tr><tr><td>Mozilla</td><td>18.49%</td></tr><tr><td>Apple</td><td>7.62%</td></tr><tr><td>Igalia</td><td>6.15%</td></tr><tr><td>Intel</td><td>4.09%</td></tr><tr><td>Microsoft</td><td>3.69%</td></tr><tr><td>Opera</td><td>0.99%</td></tr><tr><td>Maksim Sadym</td><td>0.96%</td></tr><tr><td>Jonathan Lee</td><td>0.88%</td></tr><tr><td>longsonr</td><td>0.78%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

  <section class="sectioning">
    <h2 class="contextual-heading" style="font-size: 2.5rem;">We are champions</h2>
    <p>There are also a few related projects where <em>Igalia</em> is now the champion: Servo, the independent, parallel, memory safe, Rust based engine - and Wolvic, the XR browser formerly known as Firefox Reality, and Babel where we have been playing a huge role. In each of these projects Igalia is doing sponsored work, and our own investment because we believe they are important to the ecosystem right now.</p>

    <section>
      <conextual-heading>Servo</conextual-heading>
      <p>#1 in servo 🔥🔥!</p>
      <p>It's still recent history that Igalia got involved in Servo, but it's been exciting to watch it develop!  If you or your organization would be interested in funding some work, reach out to me. You can also donate via <a href="https://github.com/servo">GitHub sponsors</a> or <a href="https://opencollective.com/servo">open collective</a>.</p>
      <figure>
          <img src="/media/2024/commits/servo.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>43.94%</td></tr><tr><td>sagudev</td><td>7.96%</td></tr><tr><td>Huawei</td><td>4.16%</td></tr><tr><td>inventati.org</td><td>3.71%</td></tr><tr><td>Taym Haddadi</td><td>3.54%</td></tr><tr><td>Oluwatobi Sofela</td><td>3.45%</td></tr><tr><td>Zesty</td><td>2.83%</td></tr><tr><td>Rosemary Ajayi</td><td>2.12%</td></tr><tr><td>Mozilla</td><td>1.77%</td></tr><tr><td>Crab Nebula</td><td>1.68%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    <section>
      <conextual-heading>Babel</conextual-heading>
      <p>Igalia is also #1 in Babel commits 🔥🔥!  Did you expect it? <a href="https://tech.lgbt/@nic">Nicolò Ribaudo</a> has been busy!</p>
      <figure>
          <img src="/media/2024/commits/babel.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>38.58%</td></tr><tr><td>liuxingbaoyu</td><td>28.19%</td></tr><tr><td>Huáng Jùnliàng</td><td>20.18%</td></tr><tr><td>renovate[bot]</td><td>2.08%</td></tr><tr><td>Amjad Yahia Robeen Hassan</td><td>1.48%</td></tr><tr><td>Sukka</td><td>1.19%</td></tr><tr><td>blake.id</td><td>0.59%</td></tr><tr><td>fisker Cheung</td><td>0.59%</td></tr><tr><td>samual.uk</td><td>0.59%</td></tr><tr><td>ynnsuis</td><td>0.30%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    <section>
      <conextual-heading>Wolvic</conextual-heading>
      <p>Of course, as the stewards of Wolvic, we're the #1 in contributors there too! 91.6% of commits! There's also now the wolvic-chromium </p>
      <figure>
          <img src="/media/2024/commits/wolvic.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>91.64%</td></tr><tr><td>weblate.org</td><td>1.55%</td></tr><tr><td>reimu.nl</td><td>1.24%</td></tr><tr><td>сэр Аноним</td><td>1.24%</td></tr><tr><td>Felipe Erias</td><td>0.93%</td></tr><tr><td>hotmail.es</td><td>0.93%</td></tr><tr><td>opensuse.org</td><td>0.62%</td></tr><tr><td>Ha Anh Vu</td><td>0.31%</td></tr><tr><td>Houssem Nasri</td><td>0.31%</td></tr><tr><td>HoussemNasri</td><td>0.31%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>


    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">Accessibility</h3>
      <p>Igalia has had an investment in accessibility for years. We've got a lot of expertise, and play an important role in some key projects:</p>

      <section>
      <conextual-heading>Orca</conextual-heading>
      <p>Realisically this should be above as we're pretty much the maintainers of Orca, the screen reader for Linux (shout out to my colleague Joanie!).</p>
      <figure>
          <img src="/media/2024/commits/orca.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>76.43%</td></tr><tr><td>ubuntu.com</td><td>2.42%</td></tr><tr><td>gnome.org</td><td>2.17%</td></tr><tr><td>Andy Holmes</td><td>1.78%</td></tr><tr><td>bk.ru</td><td>1.15%</td></tr><tr><td>pickup.hu</td><td>1.15%</td></tr><tr><td>gtu.ge</td><td>1.15%</td></tr><tr><td>Yaron Shahrabani</td><td>1.15%</td></tr><tr><td>ukr.net</td><td>0.89%</td></tr><tr><td>Sabri Ünal</td><td>0.89%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    <section>
      <conextual-heading>aria</conextual-heading>
      <p>Igalia is #3 in commits to the aria repo - unsurprising as our colleague Valerie Young is co-chair of the working group!</p>
      <figure>
          <img src="/media/2024/commits/aria.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Paciello Group</td><td>21.51%</td></tr><tr><td>w3.org</td><td>17.74%</td></tr><tr><td>Igalia</td><td>16.13%</td></tr><tr><td>github-actions[bot]</td><td>9.68%</td></tr><tr><td>Daniel Montalvo</td><td>7.53%</td></tr><tr><td>Peter Krautzberger</td><td>5.38%</td></tr><tr><td>Adobe</td><td>4.84%</td></tr><tr><td>Matt Garrish</td><td>4.30%</td></tr><tr><td>usablenet.com</td><td>1.61%</td></tr><tr><td>pkra</td><td>1.61%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    <section>
      <conextual-heading>CORE-AAM</conextual-heading>
      <p>The AAMs are what actually map the standards to the accessibility layer, there are several of them. Very few people work on these, and guess who is pretty important there too? If you guessed Igalia, you'd be right.  Igalia is the #1 contributor in CORE-AAM, Graphics-AAM and MathML-AAMs.</p>
      <figure>
          <img src="/media/2024/commits/core-aam.svg" alt="">
          <details>
            <summary>data</summary>
            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>github-actions[bot]</td><td>28.57%</td></tr><tr><td>Igalia</td><td>28.57%</td></tr><tr><td>w3.org</td><td>28.57%</td></tr><tr><td>Paciello Group</td><td>14.29%</td></tr></tbody></table></div>
          </details>
      </figure>
    </section>

    </section>

    <section class="sectioning">
      <h3 class="contextual-heading" style="font-size: 3rem;">That's not remotely all</h3>
      <p>These are just some that I am closer to and feel are interesting to highlight, but the list of open source repositories in which Igalia is playing an important to critical role is way longer than this. For example:

      </p><ol>
        <li>Igalia #2 in commits to GStreamer, the powerful multimedia framework.  We're the main maintainers of the GStreamer ports of WebKit used in Linux browsers on desktops as well as on a plethora of embedded devices.</li>
        <li>We've been very involved in work on GL, and contributing to Khronos Vulkan, OpenGL, and OpenGL ES Conformance Tests.  In fact, we are the #1 contributor to the <a href="https://github.com/KhronosGroup/VK-GL-CTS">Vulkan GL Conformance Test Suite Repository</a>!</li>
        <li>Igalia is the #2 contributor to the CI-tron project, which was started by Valve and is currently developed mostly by Valve contractors. CI-tron lets developers easily create CI systems based on bare metal computers, which is particularly important for Mesa and other open-source graphics projects.</li>
        <li>Igalia is the #1 contributor to <a href="https://gitlab.gnome.org/GNOME/libsoup">libsoup</a> the HTTP client/server library for GNOME.</li>
        <li>Igalia is the #3 contributor to <a href="https://gitlab.freedesktop.org/mesa/mesa.git">Mesa</a> the 3D Graphics Library</li>
      </ol>
    </section>

    <p>Anyway, I love to take the time to look at these every year and see how we're doing. It's easy to get lost in the bustle of everything that's going on and miss how much we really do - it's good to take stock.  I hope that others find this interesting too, and maybe learn something about Igalia.  Most of the work that we do is funded by companies. If your organization has some needs, you know where to find me :)</p>

    </section>    
    
   

    
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keeping up: Signal to Noise]]></title>
        <id>https://bkardell.com/blog/BCD-Watch.html</id>
        <link href="https://bkardell.com/blog/BCD-Watch.html">
        </link>
        <updated>2024-09-23T04:00:00.000Z</updated>
        <summary type="html"><![CDATA[Last year in December, Eric Meyer and I did an episode of Igalia Chats titled "The Struggle to Keep Up with Web Tech". It recounts the multi-dimensional challenges that developers can face in trying to keep up with developments in the web platform.]]></summary>
        <content type="html"><![CDATA[
    <h1 class="contextual-heading" style="font-size: 2rem;">Keeping up: Signal to Noise</h1>
    <p class="segue">Last year in December, Eric Meyer and I did an episode of Igalia Chats titled <a href="https://www.igalia.com/chats/keeping-up">"The Struggle to Keep Up with Web Tech"</a>. It recounts the multi-dimensional challenges that developers can face in trying to keep up with developments in the web platform.</p>
    <p>I've thought for a long time now that we all need better ways to keep up, and especially to <em>not miss the most important stuff</em>. Today, I'm happy to annouce what we think is a real help at that.</p>
    <section class="sectioning">
        <h2 class="contextual-heading" style="font-size: 2.5rem;">Introducing bcd-watch</h2>
        <p>If you're not familiar, "bcd" is short for "browser compatibility data". <a href="https://github.com/mdn/browser-compat-data">The browser-compat-data repository</a> is the source of what is shown on MDN and used for many other critical things as well. All of the browser vendors, contributors and tech writers strive together to keep the information there accurate and up to date.</p>
        <p>Back in 2022, Eric and I had the idea to write a tool which would fetch this data from time to time, compare it with the previous data and put together a brief report that you could view, and an RSS feed you could subscribe to. <a href="https://bkardell.com/blog/CoolTool.html">I wrote a thing about BCD</a> and the fact that you could actually even use GitHub's API to subscribe to the release notes, which are already pretty nice. This was November 2022, and it was teasing a few screenshots from the prototype we had.</p>
        <p>A month and 5 days later, <a href="https://bkardell.com/blog/WeirdHoliday.html">I unexpectedly had a heart attack</a>.</p>
        <p>So, it got shoved to the back burner for a while but today we're finally sharing it. My colleage Eric Meyer has a a much better post annoucing this that I'll just point you to: <a href="https://meyerweb.com/eric/thoughts/2024/09/23/announcing-bcd-watch/">Annoucing BCD-Watch.</a>.</p>  
    </section>
]]></content>
    </entry>
</feed>