{
    "version": "https://jsonfeed.org/version/1",
    "title": "bkardell.com rss feed",
    "home_page_url": "http://bkardell.com/",
    "feed_url": "https://bkardell.com/blog/feed.json",
    "description": "Just the bkardell.com rss feed",
    "icon": "http://bkardell.com/profile.jpg",
    "author": {
        "name": "Brian Kardell",
        "url": "https://bkardell.com"
    },
    "items": [
        {
            "id": "https://bkardell.com/blog/LovelyTrees.html",
            "content_html": " \n\t<h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Lovely Trees</h1>\n\t<p class=\"segue\">You've read lots of Web Components posts lately, I think this one is a little different.</p> \n\t<script src=\"../prism.js\"></script>\n\t<link rel=\"stylesheet\" href=\"../prism.css\">\n\t\n   <p>\n\t\tI'm <em>thrilled</em> that so many people are suddenly learning about, and falling in love with Custom Elements separately from Shadow DOM. It is, in my mind, best to learn about Custom Elements first anyways. And, if your goals are to use it in some simple, static sites, or blogs - then, well, that might be all you need.  It's just a better version of what we used to do with jQuery, really.  \n\t</p>  \n\n\t<p>But…</p>\n\n\t<p>Here is where I want to say something about Shadow DOM, and I expect it will go something like this:</p>\n\n\n\t<figure class=\"captioned-image optional\">\n\t\t<video src=\"/media/PB_Fire_Swamp.mp4\" controls=\"\" style=\"max-width: 600px; width: 100%; display: block; margin: 2rem auto 3rem;\"></video>\n\t\t<figcaption>It's not so bad.</figcaption>\n\t</figure>\n\n\t<p>\n\t\tBut, stick with me.  It won't be that bad, I promise.\n\t</p>\n\n\t<p>\n\t\tThe simple light DOM way is, yes, good.  But it creates a poor illusion if the component manipulates the DOM.  That illusion is easy shattered as neither component authors, nor page authors can reason well about the tree in potentially important ways, because it is a transform of the page author's tree to some tree of the component author's making, with no designed coordination. And then, <em>everything</em> starts breaking down quickly, not just CSS. Script too, uses selectors and tree relationships.  Where there is any kind of real complexity: It's cases like that that Shadow DOM <em>should</em> serve us very well for. \n\t</p>\n\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">But it falls short</h2>\n\t\t<p>\n\t\t\tDespite this, it seems that for plenty of people who have tried, Shadow DOM is falling short.  All of the posts I'm reading show that people are so put off by the current state that they'd flipped the bit until now on Custom Elements too.  When one steps back and looks at all of the calls (from people who have been trying to use Shadow DOM for a while) for a few variations of \"open style-able roots\", or \"slots in the light DOM\", or \"ability to use IDREFs across shadow roots\" - or even the fact that we're bringing back scoped styles: It really starts to seem like maybe we've missed (or at least not recognized or prioritized)  multiple important use cases along the way.\n\t\t</p>\n\t\t\n\t\t<p>\n\t\t\tI think this is because we've focused mainly on giving developers a capability to build and share something that is pretty similar to native widgets - and that's not what most people think they need.  Indeed, I think we've failed to wrestle with differences that seem sharp. \n\t\t</p>\n\n\t\t<p>\n\t\t\tFor example: Browsers are <em>extremely</em> careful to not expose their \"Shadow DOM\" internals because the consequences of doing so could be dire. If they didn't, then when browsers try to push an update that makes some otherwise innocuous, even welcome change, everything goes wrong. Users suddenly experience problems in tons of apps.  Maybe they suddenly can't activate a control.  Perhaps that prevents them from getting the information they need for their bank, or their insurance.  It can be a very big deal.  People start filing bugs on those websites and writing hate filled blog posts.  Devs from those websites do the same in kind.  And so on.  No one wins.</p>\n\n\t\t<p>\n\t\t\tHowever, code libraries (of custom elements or anything else) are different. It's sites themselves, not the browser or the library, that are in charge of deploying upgrades to libraries, which involves testing and avoids the worst surprises. Neither the site author, nor the library author, it seems, generally requires the kind of extreme upgrade guarantees that current Shadow DOM is built to grant.  Largely, it seems they would provide other trade-offs instead.\n\t\t</p>\n\n\t\t<p>\n\t\t\tThe design of Shadow DOM also hasn't focused enough on collaboration.  I believe (as I have since the beginning) that <em>most</em> uses of Shadow DOM are about some kind of collaboration -- more about preventing <a href=\"https://bkardell.com/blog/FriendlyFire.html\">friendly fire</a>.  But what we've created is perhaps more like a programming language with only <code>private</code> — no <code>protected</code> or \"friendly\" concepts.\n\t\t</p>\n\n\t\t<p>\n\t\t\tIf you think that all of this sounds kind of damning of standards, it's more complicated than it seems.  There are no cow paths to pave here.  But, what if there were? Because, at this point, it sure seems like there could be.\n\t\t</p>\n\n\t\t<p><em>I'm not saying I'd like to build a summer home there, but the Shadow Trees are actually quite lovely</em>.</p>\n\t</section>\n\n\t\n\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Treading Some Cow Paths</h2>\n\t\t<p>\n\t\t\t<em>Lots</em> of coordination is totally possible, it simply requires jumping through hoops and isn't standard.  The community can, probably should, spend some time proving out and living with a few different ideas.  That would make standardizing one of them much easier (standards are at their best, in my take, when they are mostly <a href=\"https://bkardell.com/blog/Dropping-The-F-Bomb-On-Standards.html\">writing down the slang that developed and was tested naturally, in the wild</a>). Better still it taps into the creative power of the commons to get us <em>functional</em> solutions now, rather than making us wait forever for solutions that might not arrive for years - or even ever! This sort of approach is how we got things like <code>.querySelector()</code> <code>.matches()</code> and <code>.closest()</code>.\n\t\t</p>\n\n\t\t<p>\n\t\t\tToday, if you create a Shadow DOM, style rules inside don't leak out to the rest of the page, and don't \"leak in\" from the page.  There are a lot of people who dislike that second part.  Tricky thing is, they don't all seem to dislike it the same way, or want the same kind of solution(s).  What we need here, I think, is practical experience and, luckily, we have the raw materials to try solutions to some of this in the wild ourselves and see what pains it soothes (and probably, also realize some that it causes). \n\t\t</p>\n\n\t\t<p>\n\t\t\tFor example, here are few major potential philosophies: \n\t\t</p> \n\t\t<dl>\n\t\t\t<dt>Let components decide</dt> \n\t\t\t<dd>Authors extend a new base class which then automatically pulls down a copy of some, or all of the styles provided by the page.</dd>\n\n\t\t\t<dt>Let page authors decide</dt> \n\t\t\t<dd>Lets the page say \"these are the base, simple styles for all components\" regardless of what they extend. I think this is kind of key because one of the really nice things about custom elements is that many of us might like to share and find and mix and match, which is pretty hard to do while also basing a solution on extending a particular base class.</dd>\n\t\t</dl>\n\n\n\t\t<p>But which one is \"right\"? All of them feel more natural for some use cases/scenarios. All of them are probably just terrible for others. Maybe there are more variants! Maybe what we need is a \"pick one, that's how your page will work\" idea.  Or, maybe we need all of them to work!  I think we can only learn through use and experimentation, so...</p>\n\n\t\t<p><a href=\"https://github.com/bkardell/shadow-boxing/\">Here's a tiny library to let you try each those things</a>!</p>\n\n\t\t<p><a href=\"https://shadow-boxing.glitch.me/\">And a little glitch you can poke around, inspect, remix, play with, and tweak</a>.</p>\n\n\t\t<p>Go on... Pick one. Try it. Remix the glitch, make a pen, try it on your site. Love it or hate it.  Let it inspire better ideas.  But, most importantly - share your thoughts - regardless! Did it do good things for you? Was it tricky? I want to know!</p>\n\n\t</section>\n\t\t\n\n\n",
            "url": "https://bkardell.com/blog/LovelyTrees.html",
            "title": "Lovely Trees",
            "summary": "You've read lots of Web Components posts lately, I think this one is a little different.",
            "date_modified": "2023-12-26T05:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/NuclearMaths.html",
            "content_html": "\n  <h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">The Effects of Nuclear Maths</h1>\n  <p class=\"segue\">Carrying on Eric's work on “The Effects of Nuclear Weapons” - with native MathML.</p>\n  <script src=\"../prism.js\"></script>\n  <link rel=\"stylesheet\" href=\"../prism.css\">\n  \n  <p>As I have explained a few times since first writing about it in <a href=\"https://bkardell.com/blog/Math.html\" target=\"_blank\" rel=\"noopener\">Harold Crick and the Web Platform</a> in Jan 2019, I'm interested in MathML (and SVG).  I'm interested in them because they are historically special: integrated into the HTML specification/parser even.  Additionally, their lineage makes them unnecessarily weird and \"other\".  Worse, they're dramatically under-invested in/de-prioritized.  I believe all that really needs to change.  Note that none of that says that <em>I</em> need MathML, personally, for the stuff that I write - but rather that I understand why it is that way and the importance <em>for the web at large</em> (and society).  This is also the first time I've helped advocate for a thing I didn't have a bunch of first-hand experience with.</p>\n\n  <p>Since then, I've worked with the Math Community Group to create MathML-Core to resolve those historical issues, get a W3C TAG review, an implementation in Chromium (also done by Igalians) and recharter the MathML Working Group (which I now co-chair).</p>\n\n  <p>For authors, the status of things is <em>way better</em>.  Practically speaking, you can use MathML and render some pretty darn nice looking maths for a whole lot of stuff.  Some of the integrations with CSS specifically aren't aligned, but they didn't exist at all before, so maybe that’s ok.</p>\n\n  <p>Despite all of this, it seems lots of people and systems still use MathJax to render as SVG, sometimes also rendering MathML for accessibility reasons.  But, why? It's not great for performance if you don't have to.</p>\n\n  <p>I really wanted to better understand.  So I decided to tackle some test projects myself and to take you all along with me by documenting what I do, as I do it.</p>\n\n  <section id=\"Nuking-all-the-MathJax\" class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Nuking all the MathJax (references)</h2>\n\n    <p>Last year, my colleague Eric Meyer wrote a piece about some work he'd been doing on a passion project <a href=\"https://meyerweb.com/eric/thoughts/2022/08/09/recreating-the-effects-of-nuclear-weapons-for-the-web/\" target=\"_blank\" rel=\"noopener\">Recreating “The Effects of Nuclear Weapons” for the Web</a>, in which they bring a famous book to the web as faithfully as they can.</p>\n\n    <p>This piece includes a lot of math - hundreds of equations.</p>\n    <p>You can see <a href=\"https://atomicarchive.com/resources/documents/effects/glasstone-dolan/\" target=\"_blank\" rel=\"noopener\">the result of their work on atomicarchive.com</a>.  The first two chapters aren't so math heavy, but Chapter 3 alone contains 179 equations!</p>\n<p>It looks good!</p>\n\n    <p>Luckily, <a href=\"https://github.com/chrisgriffith/glasstone-dolan\" target=\"_blank\" rel=\"noopener\">it's on github</a>.</p>\n\n    <p>Oh hey! These are just static HTML files!</p>\n    \n    <p>Inside, I see that each file contains a block like this:</p>\n\n    <pre><code class=\"language-html\">&lt;script id=\"MathJax-script\" async src=\"mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nMathJax = {\n  tex: {\n    inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n  },\n  svg: {\n    fontCache: 'global'\n  }\n};\nMathJax.Hub.Config({\n  CommonHTML: {\n    linebreaks: {automatic: true}\n  }\n});\n&lt;/script&gt;</code></pre>\n\n<p>These lines configure how MathJax works, including <em>how it is identified in the page</em>.  If you scan through the source of, say, chapter 3, you will see lots of things like this:</p>\n\n<figure>\n<pre><code class=\"language-html\">&lt;p&gt;where $c_0$ is the ambient speed of sound (ahead of the shock front), $p$ is the peak overpressure (behind the shock front), $P_0$ is the ambient pressure (ahead of the shock), and $\\gamma$ is the ratio of the specific heats of the medium, i.e., air. If $\\gamma$ is taken as 1.4, which is the value at moderate temperatures, the equation for the shock velocity becomes&lt;/p&gt;\n    \n\\[\nU = c_0 \\left( 1 + \\frac{6p}{7P_0} \\right)^{1/2},\n\\]</code></pre>\n\n<figcaption>Code sample from chapter 3</figcaption>\n</figure>\n\n<p>What you can see here is that the text is peppered with those delimiters from the configuration, and inside is TeX.</p>\n\n\n<div class=\"note\" id=\"People-don’t-like-writing-ML\">\n  <strong>People don't like writing *ML</strong>\n  <p>I just want to take a minute and address the elephant in the room: Most people don't want to write MathML, and that's not as damning as it sounds.  Case in point, as I am writing this post, I am not writing <code>&lt;p&gt;</code> and <code>&lt;h1&gt;</code> and <code>&lt;section&gt;</code>s and so on…  I'm writing markdown, as the gods intended.</p>\n\n  <p>TimBL’s original idea for HTML wasn't that people would write it - it was that machines would write it. His first browser was an editor too - but a relatively basic rich text editor, a lot like the ones you use every day on github issues or a million other places. The very first project Tim did with HTML was the CERN phone book which did all kinds of complicated stuff to dynamically write HTML - the same way we do today.  In fact, it feels like 90% of engineering seems to be transforming strings into other strings: And it's nothing new.  TeX has been around almost as long as I've been alive and it's a fine thing to process.</p>\n</div>\n  \n  <p>This format, of text tokens being anywhere in the document is way more ideally suited to processing on a build or server than on the client.  On the client we'd more ideally work with the tree and manage re-flow and so on.  Here the tree is irrelevant - in the way even -  because there are some conflicting escapes or encodings… But, it's just a string... And there are <em>lots of things that can process that string and turn it into MathML.</em></p>\n\n  <p>My colleague Fred Wang has an open source project called <a href=\"https://github.com/fred-wang/TeXZilla\" target=\"_blank\" rel=\"noopener\">TeXZilla</a>, so I'm going to use that.</p><h2 id=\"Nuking-the-scripts\">Nuking the scripts</h2><p>First thing first, let's get rid of those script tags.  Since they contain the tokens they'd be searching the body for, but well be processing the whole document, they'll just cause problems anyways.</p>\n\n  <p>Ok. Done.</p>\n\n  <p>Next, I checkout the TeXZilla project parallel to my book project and try to use the ‘streamfilter’ which lets me just <code>cat</code> and <code>|</code> (pipe) a file to process it…</p>\n\n  <p></p><pre><code class=\"terminal\"> &gt;cat chapter1.html | node \"../../texzilla/node_modules/texzilla/TeXZilla.js\" streamfilter</code></pre><p></p>\n<p>Hmm… It fails with an error that looks something like this (not exactly if you're following along, this is from a different file):</p>\n\n  <pre><code class=\"terminal\">&gt;cat chapter1.html | node \"../../texzilla/node_modules/texzilla/TeXZilla.js\" streamfilter\n\nError: Parse error on line 145:\n...}\\text{Neutron + }&amp;\\!\\left\\{\\enspace\n---------------------^\nExpecting 'ENDMATH1', got 'COLSEP'\n.....\n</code></pre>\n\n<p>I don’t know TeX, so this is kind of a mystery to me. I search for the quoted line and have a look. I find some code surrounded by <code>\\begin{align}</code>  and <code>\\end{align}</code>.  I turn to the interwebs and find some examples where it says  <code>\\begin{aligned}</code>  and <code>\\end{aligned}</code>, so I try just grep/changing it across the files and, sure enough, it processes further.  Which is right? Who knows - let's move on...</p>\n\n<p>I find a similar error like...</p>\n\n<pre><code class=\"terminal\">Error: Parse error on line 759:\n...xt{ rads. } \\; \\textit{Answer}\\]&lt;/asi\n-----------------------^\nExpecting '{', got 'TEXTARG'</code></pre>\n\n<p>Once again on the interwebs I find some code like <code>Textit{...}</code> (uppercase <code>T</code>) - so, I try that.  Sure enough, it works fine.  Or wait... Does it?  No, it just leaves that code untransformed now.</p>\n\n<p>But… Now we have MathML! At least in some chapters!</p>\n\n<p>With a little more looking, I find that this is a primary sort of TeX thing, it's just a quirk of TeXZilla, and I turn those those <code>textit{...}</code> into <code>mathit{...}</code> and now we're good. Finally.  Burned some time on that, but not too bad.</p>\n\n<p>I encounter two other problems along the way: First, escaping.  The source contains ampersand escapes for a few Unicode characters which aren't a problem when you're accessing it from <code>body.innerText</code> or something maybe, but are a problem here.  Still, it takes only a couple of minutes more to replace them with their actual Unicode counterparts: <code>&amp;phi;</code> ⇒ <code>φ</code>, <code>&amp;lambda;</code> ⇒ Λ, <code>&amp;&amp;times;</code> ⇒ ×).</p>\n\n<p>When I’m done I can send that to a file, something like this…</p>\n\n<p></p><pre><code class=\"terminal\">&gt;cat chapter3.html | node \"../../texzilla/node_modules/texzilla/TeXZilla.js\" streamfilter &gt; output.html</code></pre><p></p>\n\n<p>And then just open it in a browser.</p>\n\n<p>There are some differences.  MathJax adds a margin to math that's on its own line (block) that isn't there natively.  The math formulas that are ‘tabular’ aren't aligning their text (the <code>=</code>), and the font is maybe a little small.  After a little fooling around, I add this snip to the stylesheet:</p>\n\n<pre><code class=\"language-css\">math[display=\"block\" i] {\n  margin: 1rem 0;\n}\n\nmath {\n    font-size: 1rem;\n}\n\nmfrac {\n    padding-inline-start: 0.275rem;\n    padding-inline-end: 0.275rem;\n}\n\nmtd {\n  text-align: left;\n}</code></pre>\n\n<p>And the last problem I hit?  An error in the actual inline TeX in the source, I think, where it was missing a <code>$</code>.  MathJax simply left that un-transformed, just like my previous example because it lacked the closing <code>$</code>, but TeXZilla was all errory about it. I sent <a href=\"https://github.com/chrisgriffith/glasstone-dolan/pull/64\">a pull request</a>, and I guess we'll see.</p>  \n<p>And like… that's it.</p>\n\n<p>All in all, the processing time here including learning the tools and figuring out the quirks in a language I'm unfamiliar with is maybe half a day - but that's scattered across short bits of free time here and there.</p>\n\n<p>Is it done? Is it good enough? It definitely needs some proofing to see what I've missed (I'm sure there's some!), and good scrutiny generally, but... It looks pretty good at first glance, right (below)?</p>\n\n<figure class=\"captioned-image\">\n    <img src=\"/media/mathml-and-jax-atomic.png\">\n    <figcaption>Native MathML on the left, MathJax on the right</figcaption>\n</figure>\n\n<p>You can browse it at:</p>\n<p><a href=\"https://bkardell.com/effects-of-nuclear-math/html/\" target=\"_blank\" rel=\"noopener\">https://bkardell.com/effects-of-nuclear-math/html/</a>. </p>\n\n<p>And, <a href=\"https://github.com/bkardell/effects-of-nuclear-math\">send me an issue</a> if you find anything that should be improved before I eventually send a pull request, or you see something that looks bad enough that you wouldn't switch to native MathML for this.</p>\n\n<p>But, all in all: I feel like you can make pretty good use of native MathML at this point.</p>\n</section>\n",
            "url": "https://bkardell.com/blog/NuclearMaths.html",
            "title": "The Effects of Nuclear Maths",
            "summary": "Carrying on Eric's work on “The Effects of Nuclear Weapons” - with native MathML.",
            "date_modified": "2023-12-01T05:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/PriorityGame.html",
            "content_html": "\n\t<h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Let's Play a Game</h1>\n\t<p class=\"segue\">It's Interop 24 planning time!  Let's play a game: Tell me what you prioritize, or don't and why?\n\t</p>\n\n\t<p>I've written before about how prioritization is hard.  Just in the most tangible of terms, there are differing finite resources, distributed differently across organizations.  That is, not all teams have the same size or composition, or current availability.  They're all also generally managed and planned independently with several other factors in mind, and in totally different architectures.  That's a big part of what makes standards often take so long to get sorted out to where everyone can just use them without significant concerns.</p>\n\n\t<p>Conversely, occasionally we see things ship at what seems by comparison amazing speed.  Sometimes that's a bit of an illusion: They've been brewing and aligning hard parts for years and we're only counting the end bits. But other times it's just because we've aligned.  A nice way to think about this, if you're a developer,  is to compare it to web page performance. If all of the resources just load as discovered and there's no thought put into optimization, things can get really out of control.  When you do some optimization and coordination, you can get things many times faster pretty quickly.  The big difference here is mainly that instead of milliseconds, with standards substitute weeks or something.</p>\n\n\t<p>I think that's one of the best things about Interop.  While it isn't a promise by anyone or anything, it does seem to serve as a function to get us to focus together on some things and align - doing that optimization work.</p>\n\n\t<p>It's a damned tricky exercise though, I'm not going to lie. There are so many things to consider and align.  I kind of like sharing insight into this because I spent a really long time as a developer myself with a significantly different perspective.  Seeing all of this from the inside the last few years has been really eye-opening.  So, I thought, let's play a game... It might be useful to both of us.</p>\n\n\t<p>Below is a list of links to about 90 2024 proposals. It's not carefully complete and I have excluded a few that I personally feel perhaps don't fit the necessary criteria for inclusion.  It would, of course, be a huge time suck for you to spend your unpaid time carefully researching all of them - so that's not the game.  Note that this represents a tiny fraction of the open issues in the platform - so you can start to see how this is challenging.</p>\n\n\t<p>So, the game is: Bubble sort as many of these as you can (at least 5-10 would be great) and, optionally, share something back about why you prioritized or de-prioritized something.  That can be in a reply blog post, a few messages on social media of your choice, share a gist... Whatever you like.</p>\n\n\t<p>Here's the list (note there is a bit more prose afterward)</p>\n\n\t<ol><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/532\">MediaCapture device enumeration</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/554\">Standardize SVG properties in CSS to support unitless geometry</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/536\">Fetch Web API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/464\">Web Share API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/489\">Full support of background properties and remove of prefixes</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/427\">Canvas text rendering and metrics (2024 edition)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/439\">Scroll-driven Animations</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/528\">Scrollend Events</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/572\">&lt;search&gt;</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/422\">text-box-trim</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/544\">Web Audio API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/535\">CSS :dir() selectors and dir=auto interoperability</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/420\">CSS Nesting</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/531\">WebRTC peer connections and codecs</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/571\">scrollbar-width CSS property</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/546\">JavaScript Promise Integration</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/433\">CSS style container queries (custom properties)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/573\">Allowing &lt;hr&gt; inside of &lt;select&gt;</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/517\">CSS background-clip</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/562\">text-wrap: pretty</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/541\">font-size-adjust</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/563\">requestIdleCallback</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/553\">&lt;details&gt; and &lt;summary&gt; elements</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/538\">CSS text-indent</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/426\">Relative Color Syntax</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/417\">scrollbar-color CSS property</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/527\">input[type=\"range\"] styling</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/495\">Top Layer Animations</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/443\">Gamut mapping</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/493\">Canvas2D filter and reset</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/522\">WebXR</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/428\">User activation (2024 edition)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/558\">text-transform: full-size-kana &amp; text-transform: full-width</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/539\">document.caretPostitionFromPoint</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/513\">Unit division and multiplication for mixed units of the same type within calc()</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/555\">EXPAND :has() to include support for more pseudo-classes</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/485\">WebM AV1 video codec</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/465\">CSS image() function</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/451\">WebDriver BiDi</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/486\">CSS box-decoration-break</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/561\">text-wrap: balance</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/506\">inverted-colors Media Query</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/526\">Accessibility (computed role + accname)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/568\">display: contents</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/512\">Accessibility issues with display properties (not including display: contents)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/494\">HTMLVideoElement.requestVideoFrameCallback()</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/529\">Text Fragments</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/523\">blocking=\"render\" attribute on scripts and style sheets</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/516\">Indexed DB v3</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/501\">Declarative Shadow DOM</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/521\">attr() support extended capabilities</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/534\">Notifications API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/567\">HTTP(S) URLs for WebSocket</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/548\">WasmGC</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/542\">size-adjust</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/508\">video-dynamic-range Media Query</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/419\">CSS scrollbar-gutter</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/490\">CSS Typed OM Level 1 (houdini)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/436\">import attributes / JSON modules / CSS modules</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/442\">CSS element() function</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/437\">View Transitions Level 1</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/519\">Local Network Access and Mixed Content specification</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/484\">WebM Opus audio codec</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/421\">Custom Media Queries</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/500\">Trusted Types</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/549\">WebTransport API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/503\">CSS object-view-box</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/441\">Intersection Observer v2</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/540\">Custom Highlight API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/564\">backdrop-filter</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/533\">WebRTC “end-to-end-encryption”</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/498\">Streams</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/510\">Media pseudo classes: :paused/:playing/:seeking/:buffering/:stalled/:muted/:volume-locked</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/556\">CSS box sizing properties with MathML Core</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/518\">Detect UA Transitions on same-document Navigations</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/440\">css fill/stroke</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/430\">JPEG XL image format</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/499\">font-family keywords</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/520\">CSS Multi-Column Layout block element breaking</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/435\">Navigation API</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/511\">Ready-made counter styles</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/491\">hidden=until-found and auto-expanding details</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/423\">Popover</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/559\">P3 All The Things</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/525\">URLPattern</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/429\">margin-trim</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/560\">overscroll-behavior on the root scroller</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/496\">CSS Painting API Level 1 (houdini)</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/434\">CSS Logical Properties and Values</a></li><li><a target=\"_blank\" href=\"https://github.com/web-platform-tests/interop/issues/431\">CSS caret, caret-color and caret-shape properties</a></li></ol>\n\n\t<p>The tricky thing is that there is no 'right' answer here, and one can easily make several cases.  For example, perhaps we should prioritize things that cannot be polyfilled or done with pre-processors over things that can.  That sounds reasonable enough, but given that the queue never empties: Do you just do that forever? Does it eventually lead to larger areas that are ignored?  Similarly, do you focus on the things that are sure to be used by everyone, or do you assume those already get the most priority and focus on the things that don't.  Do you pick certain compat pain points/bugs, or focus on launching new features quickly and very interoperably?</p>\n\n\t<p>It's a hard game! Looking forward to your answers.</p>\n\n",
            "url": "https://bkardell.com/blog/PriorityGame.html",
            "title": "Let's Play a Game",
            "summary": "It's Interop 24 planning time!  Let's play a game: Tell me what you prioritize, or don't and why?\n\t",
            "date_modified": "2023-11-16T05:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/WolvicSwag.html",
            "content_html": "\n\t<h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Wolvic Store Experiment</h1>\n\t<p class=\"segue\">A post about cool stuff for a  cause.</p>\n\n\t\n\n\t<p>As of today, you can <a href=\"https://wolvic.creator-spring.com/\" target=\"_blank\" rel=\"noopener\">purchase some cool Wolvic swag</a>, and proceeds will go to supporting development of the browser:</p>\n\n\t<figure class=\"captioned-image\">\n\t\t<img src=\"/media/wolvic-store.png\" alt=\"\">\n\t\t<figcaption>There’s mugs, and water bottles and shirts and sweatshirts and … You know, stuff.</figcaption>\n\t</figure>\n\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Why?</h2>\n\t\t<p>For the last few years I’ve been writing about the health of the whole web ecosystem, and talking about it on <a href=\"https://www.igalia.com/24-7/chats\" target=\"_blank\" rel=\"noopener\">our podcast</a>. We just assume that the “search revenue pays for browsers”&nbsp;model that got us here is fine and will last forever.  I’m pretty sure it won’t.</p>\n\n\t\t<p>When you <a href=\"https://bkardell.com/blog/WhereBrowsersComeFrom.html\" target=\"_blank\" rel=\"noopener\">look at how engines and browsers are funded</a>, it’s way too centralized on search funding.  Of course, this is not a way to fund a new browser - rather it rewards those that are already making really significant entry.  The whole thing is <a href=\"https://bkardell.com/blog/Webrise.html\" target=\"_blank\" rel=\"noopener\">actually kind of fragile when you step back and look at it</a>.</p>\n\n\t\t<p>It would be nice to change that, and we only achieve that by trying.</p>\n\n\t\t<p>So, in general at Igalia we’re trying several ways to diversify funding.  Specifically for Wolvic, we’re looking into how we might explore <a href=\"https://bkardell.com/blog/SuperbHowl.html\" target=\"_blank\" rel=\"noopener\">other kinds of advertising</a>, but we’ve got this far with investment from Igalia, <a href=\"https://bkardell.com/blog/NascarModel.html\" target=\"_blank\" rel=\"noopener\">a partnership model</a> and an <a href=\"https://opencollective.com/wolvic\" target=\"_blank\" rel=\"noopener\">Open Collective</a>.</p>\n\n\t\t<p>It’s kind of easy to get applause when I talk about this, but the truth is very few people put money into our collectives.  It reminded me of… Well… Every charity, ever.</p>\n\n\t\t<p>Lots of charities (or even NPR) give you some swag with a donation. For some reason, that’s helpful in expanding the base of people making any kind of donation at all.  For some reason, offering swag makes people consider putting <em>some</em> donation toward the cause.</p>\n\t\t\n\t\t<p>Of course, this isn’t especially <em>efficient</em>: If you buy a product from our store, maybe only a few dollars of that becomes an the actual donation.  It would be far more efficient to just donate a couple of dollars to the collective, but very few do.  So we’re trying something new.</p>\n\n\t\t<div class=\"btn-group\">\n\t\t\t<div><a class=\"btn\" href=\"https://opencollective.com/wolvic\">Make a donation!</a></div>\n\t\t\t<div><a class=\"btn\" href=\"https://wolvic.creator-spring.com/\">Get some swag!</a></div>\n\t\t</div>\n\n\t\t<p>Will offering swag help here too?  Is this a model that could help us pay for things?  I don’t know, but I’m always looking for new ways to talk about this problem and new experiments we could try to keep the discussion going. So, what do you think?</p>\n\n\t</section>\n\t\n",
            "url": "https://bkardell.com/blog/WolvicSwag.html",
            "title": "Wolvic Store Experiment",
            "summary": "A post about cool stuff for a  cause.",
            "date_modified": "2023-11-08T05:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/tel-me.html",
            "content_html": "\n\t<h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">tel:me.about.it.</h1>\n\t<p class=\"segue\">Let’s talk about protocols. I’ve been repeating most of what is in this post in conversations for a while now, so I thought I should write it down.  They are thoughts around what it means to add new protocols to the platform, and how we go about it in practice.  The main extensibility mechanism that we have comes from the HTML5 era: <code>registerProtocolHandler()</code>. In this post I’ll explain where I think that’s kind of OK, where it falls (sometimes very) short, and some things I think we learned along the way. The purpose of this post isn’t to make suggestions, it’s simply to have a look at the space and the things I think we need to keep in mind.</p>\n\n\n\t<p>Most of the URLs we type these days begin with <code>https:</code> - or before that, <code>http:</code>.  We changed the main protocol of the web to be more secure.  It’s not inconceivable we could want to have that level of change again, but there are plenty of things short of that where protocols develop and somehow find their way into the platform.</p>\n\n\t<p>A few popular examples from the HTTPArchive data: Over 30% of websites include at least one <code>mailto:</code> link. Almost as many sites include a <code>tel:</code> link. There’s plenty of <a href=\"https://en.wikipedia.org/wiki/Webcal\" target=\"_blank\" rel=\"noopener\"><code>webcal:</code></a> and <a href=\"https://www.rfc-editor.org/rfc/rfc2806#section-2.3\" target=\"_blank\" rel=\"noopener\"><code>fax:</code></a>. <a href=\"https://en.wikipedia.org/wiki/Geo_URI_scheme\" target=\"_blank\" rel=\"noopener\"><code>geo:</code></a> is used on over 20,300 sites. <code>sms:</code> is used on 42,600+ websites. These are just a few examples of protocols that are trying to do something useful.</p>\n\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Things That Go “Click”</h2>\n\n\t\t<p>When you click a link that has one of those protocol identifiers, the browser says “Do I know how to handle that protocol?”  If the answer is no, it passes responsibility along to the OS.  So, if you have Skype installed, and click on a <code>skype:</code> link, the OS might launch Skype for you.</p>\n\n\t\t<p>Protocol handlers really are just built on the idea that over time, we build web-based services and it should be possible to say that the way to handle them can be by rerouting handling to a domain (say, gmail.com for <code>mailto:</code> links).</p>\n\n\t\t<p>So, for those, things it works… Kind of.</p>\n\n\t</section>\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">The mistakes we made along the way…</h2>\n\n\t\t<p>On the surface, all of those protocols that turn up in the HTTP Archive data seem like success stories. However, I’d like to tell you why they haven’t been so great, and why we already have better solutions.</p>\n\n\t\t<p>Consider the second most widely used of those, the <code>tel:</code> protocol.  Not because this one is especially bad, but because it is very easy to illustrate many problems in a concise example.</p>\n\n\t\t<p>Before <code>tel:</code>, authors would put some text in their web page, like:</p>\n\n\t\t<p><code>Phone: (555)123-4567</code></p>\n\n\t\t<p>With <code>tel:</code>, authors could now put something like this into their HTML:</p>\n\n\t\t<pre><code class=\"html hljs\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"tel:123.456.7890\"</span>&gt;</span>Call now<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n\t</code></pre>\n\n\t\t<p>Yay!  Except, no… wait… That is kind of terrible.</p>\n\n\t\t<p>Sure, for <em>some</em> users, where all of the stars align, that will be a nice convenience.  But there are just <em>way</em> too many cases where this is more of a barrier than a convenience. Let’s look at some of the failure modes of that line of code, starting with the simplest:</p>\n\n\t\t<section class=\"sectioning\">\n\t\t\t<h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Hidden information</h3>\n\n\t\t\t<p>Because we’ve made it a link, it’s far too common that authors don’t actually display the phone number.  They <em>assume</em> that the device I’m <em>looking at</em> is the device I want to dial from.  There are many cases where that is not true!</p>\n\n\t\t\t<p>Perhaps I’m on my office desktop and I want to dial with the handy office <em>phone</em> that is next to me, or the conference system, or even just my cell phone.  Maybe I want to read the number out to someone else, or write it down for later.  Just show me the !@$!@ number!</p>\n\n\t\t\t<p>This isn’t a problem inherent to the protocol, but it’s still a problem.</p>\n\t\t</section>\n\t\t<section class=\"sectioning\">\n\t\t\t<h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Theoretically capable, practically incapable</h3>\n\n\t\t\t<p>Sometimes a device can be physically capable of dialing out, but currently not have that service available. This happened to me while traveling abroad in 2018, where I was able to use my cell with WiFi but couldn’t dial out (I didn’t have WiFi calling at the time).</p>\n\n\t\t\t<p>This problem still comes up I use that same 2018 cell phone to control my media in my house, and occasionally to look something up, but since it isn’t on my cell plan, I can’t use any <code>tel:</code> links.</p>\n\t\t</section>\n\t\t<section class=\"sectioning\">\n\t\t\t<h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">No registered handler at all</h3>\n\n\t\t\t<p>On some machines, there is no registered <code>tel:</code> protocol handler.  What happens in this case? Unspecified.  Each OS will do something a little different.  For years <a href=\"https://stackoverflow.com/questions/1164004/how-to-mark-up-phone-numbers\" target=\"_blank\" rel=\"noopener\"><code>tel:</code> would often do nothing at all</a> <em>which is very confusing to users</em>.  Some operating systems will, to various degrees, offer to help you find something capable of handling the protocol, but even that can be confusing (see next point).</p>\n\t\t</section>\n\t\t<section class=\"sectioning\">\n\t\t\t<h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Registered a Complex Program</h3>\n\n\t\t\t<p>Some devices will launch a program that’s registered to handle the <code>tel:</code> protocol, <em>even if it can’t currently dial</em>.  There are many examples of this.  Apps like Google Hangouts or Skype were chat programs with some VoIP support. They could dial out if users paid a special recurring fee – but <em>most</em> users didn’t pay that fee.  When those users clicked a link and it launched their chat program, or told them they have to pay to dial, that’s confusing and frustrating.</p>\n\n\t\t\t<p>In fact, lots of users of those apps just use them for text chat.  Not so long ago, many users on office desktops didn’t have cameras, mics or speakers. If users clicked a <code>tel:</code> link and it launched their <em>chat</em> program and implied that they could pay money to dial out, but actually couldn’t do that: <em>This is very confusing to users</em>.</p>\n\t\t</section>\n\t</section>\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">The Un-Protocol…</h2>\n\t\t<p>Contrast that with this:  Today, if you use your smartphone and you select some text - regular text - there are some built in ways to assist in order to do smart selection.  That is, work has gone into making it easier for it to recognize that you’re trying to select a phone number or an email, as two examples. And if you select it, the context menu will offer “Call” or “Email”, respectively.</p>\n\n\t\t<p>You know what’s wild? No author had to do anything special at all, and it works even on content written in the 90s.  That’s… Pretty great. That’s not to say markup couldn’t <em>help</em> here, but it gets at whether it needs to  <em>fundamentally</em> be a link.</p>\n\n\t\t<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API\" target=\"_blank\" rel=\"noopener\">Web Share API</a> splits things along a similar joint.  It just shares an <em>intent</em> to share some content.  It doesn’t need to know anything about which ways you have to available to share, or reason about things in the current time.  Splitting things this way lets all of the ways to share develop entirely independently.  If new social media comes along, or goes away, or we develop new physical ways of sharing involving USB or Bluetooth or HandWaveyMagicWand - it will all JustWork™.</p>\n\n\t\t<p>Both of these seem to me generally better than many of the protocol based solutions.  I’m not suggesting protocol based solutions are useless, I’m just suggesting that it seems like there is benefit in continuing to question why and how we’re approaching things.</p>\n\t</section>\n",
            "url": "https://bkardell.com/blog/tel-me.html",
            "title": "tel:me.about.it.",
            "summary": "Let’s talk about protocols. I’ve been repeating most of what is in this post in conversations for a while now, so I thought I should write it down.  They are thoughts around what it means to add new protocols to the platform, and how we go about it in practice.  The main extensibility mechanism that we have comes from the HTML5 era: registerProtocolHandler(). In this post I’ll explain where I think that’s kind of OK, where it falls (sometimes very) short, and some things I think we learned along the way. The purpose of this post isn’t to make suggestions, it’s simply to have a look at the space and the things I think we need to keep in mind.",
            "date_modified": "2023-10-05T04:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/cosimo.html",
            "content_html": "\n\t<h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Florence Discovery</h1>\n\t<p class=\"segue\">Last week, on my way back from TPAC I took a holiday in Florence, Italy.  It was an awesome experience all around, but one thing was really personal and I wanted to write it down..</p>\n\t\n\t<p>So... I am Italian.</p>  \n\n\t<p>I know, \"Kardell\" doesn't sound Italian - and that's because it isn't.  Kardell is my biological father's name and it has, as best I know, a mix of German and Irish roots.  But my from even my very youngest memories, I was raised with/by my maternal side.  My parents divorced when I was all of 5.</p>\n\n\t<p>My mother's maiden name is <em>Frediani</em>, and both of her parents were first born generations in America, shortly after their parents arrived.   My maternal grandfather's family (Muzio Frediani) was from Tuscany.  His father was a printer (and all of his kids were later).  Their print shop  was a historic landmark in Pittsburgh's strip district.  He also founded the <a href=\"https://orderisda.org\">Italian Sons and Daughters of America</a>.  Among a lot of other things, they did a lot with Italian Americans, unions and political campaigns. My maternal grandmother's family name was Casale and they were from Silcily.  Her father (Giuseppe Casale) was a contractor/mason and he built many of the houses in the neighborhood my grandparents lived in, and my mom now lives in.</p>\n\n\t<p>This side of the family had a very strong culture. There was a lot of community. Some people in the family even still spoke Italian. They were constantly instilling this in me: You are Italian. And so, these are the roots that have always resonated in me.</p>\n\n\t<p>When I learn about Michelangelo, Galileo, Dante,  Leonardo, Raphael or Donatello (and so many more) - I felt... Actually <em>connected to it somehow</em>.  I don't know, maybe that's silly. But the result was that Italy was the one place I've always wanted to go since I was a child.</p>\n\n\t<p>I never really managed to get very far in making a family tree (lots of those services to help you feel outrageously expensive to me).  Florence, where I went, is part of Tuscany.  I went to Florence because my sister had been there kind of actively looking for connections to our family.  Frediani isn't a super common name -  I've never met another myself.</p>\n\n\t<p>Anyway... I went to Florence.</p>\n\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">A series of fortunate events.</h2>\n\t\t<p>I wasted no time, I spent pretty much all of the waking hours touring <em>something</em>: some church, garden, museum, street, bridge, etc.  In a lucky coincidence, some friend from TPAC was also in Florence and we met up for dinner.  They asked me if I had been to the church where Michelangelo was buried. No! They said \"I think maybe Dante is also buried there?\".</p>\n\n\t\t<p>Wow I wanted to go so much - I'm so fortunate that I wound up in a situation where they were there and we had dinner and they could mention it!  They had me at Michelangelo, I was very keen to go.</p>\n\n\t\t<p>I went the next afternoon, but I was in shorts and that's not allowed and I'd have to shift my schedule and come back the following day.</p>\n\n\t\t<p>So, on my very last day I went to this <a href=\"https://en.wikipedia.org/wiki/Santa_Croce,_Florence\">church at Sante Croce</a>.  Unlike every other thing I'd been to, there was no line.  Because it was the last day, I had nowhere else I really wanted to go afterward.  This was my last \"big\" stop.  So, I decided I would really take my time, soak it all in, and pay my respects.  Given this, I also decided to pay extra and do the audio guided tour.</p>\n\n\t\t<figure class=\"captioned-image\">\n\t\t\t<img src=\"/media/sante-croce-1.jpg\">\n\t\t\t<figcaption>Looking down the nave of the main church.</figcaption>\n\t\t</figure>\n\n\t\t<p>Inside I was surprised to see there were tombs in the floor everywhere - people were walking on them. A few were roped off - I think they were damaged, but mainly there were just occasionally these tombs in the floor. Around the outer wall of the church were bigger memorials to a number of important Italians (mainly Florentine, but not exclusively).  Yeah, wow. Michelangelo, Fermi, Galileo, Dante, Machiavelli - so many.</p>\n\n\t\t<p>I really took my time. I learned a ton of interesting stuff and took a lot of pictures.</p>\n\n\t\t<p>Before leaving the main part of the church I sat down and listened to more about how all of the people buried here were somehow \"important\".</p>\n\n\t\t<p>I had this fleeting thought that maybe I should go through carefully and see if I can find my family name, but I dismissed this very quickly. Florence is a huge place inside the huge place that is Tuscany - there can't be more than 70 people buried here.  The odds would be astronautical. I decided to plod on.</p>\n\t</section>\n\t<section class=\"sectioning\">\n\t\t<h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">And just then...</h2>\n\n\t\t<p>As the tour turns from the main church, it points you to a marble corridor leading to the Medici chapel (and more).  On the floor down the hall are numerous engraved marble slabs, many are worn to unreadable condition.  As I looked down the hallway my audio suddenly said</p>\n\n\t\t<blockquote>\n\t\t<p>The corridor is paved with white marble tomb slabs with gray frames, which bear names and coats-of-arms erased by time. <strong>One inscription is more clearly legible than the others, almost as if time itself had obeyed the wish it expresses; see if you can find it, it's the tomb of Cosimo Frediani, and on it is written: \"Don't tread on me\".</strong></p>\n\t\t</blockquote>\n\n\t\t<p>Wait what?  Surely that is just my mind playing tricks on me.</p>\n\n\t\t<p>I rewound it and listened again. It sure <em>sounded</em> like my family name.</p> \n\n\t\t<p>I found how to switch and look at the transcript.. It was!</p>\n\n\t\t<p>It kind of gave me a chill.</p>\n\n\t\t<p>I searched the stones, even enlisting the help of the museum personel.  There it was: It was also the only one with a relief carved on it.</p>\n\n\t\t<figure class=\"captioned-image\">\n\t\t\t<img src=\"/media/cosimo-1.jpg\">\n\t\t\t<figcaption>The marble tomb of Cosimo Frediani.</figcaption>\n\t\t</figure>\n\n\t\t<p>Wow.</p>\n\n\t\t<p>Very cool.</p>  \n\n\t\t<p>But... Who was he?  What did he do?  How far are we related? I spent some time searching and I'm not totally sure yet!  We've found a bit, but it will surely be a new family quest to find out.</p>\n\n\t\t<p>But, I mean... How amazing is it that maybe someone in my family he is buried perhaps 50-100 meters from all of those famous Italians that I feel so connected with 🖤.</p>\n\n\t\t<p>What a great experience :)</p>\n\t</section>\n",
            "url": "https://bkardell.com/blog/cosimo.html",
            "title": "Florence Discovery",
            "summary": "Last week, on my way back from TPAC I took a holiday in Florence, Italy.  It was an awesome experience all around, but one thing was really personal and I wanted to write it down..",
            "date_modified": "2023-09-30T04:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/cars.html",
            "content_html": "\n  <h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Completely Random Car and Design Stuff</h1>\n  \n\n  <p class=\"segue\">This is a kind of \"off brand\" post for me.  It's very, very random and just for fun.  It's just a whole bunch of mental wandering literally all over place about cars, design, AI and only a very little bit about the web.  Many of these observations are probably extermely specific to America, but perhaps still interesting.  There is no overarching \"point\" here, it's just thoughts.</p>\n\n  <p>There are certain trends that I notice in the design of everyday things.  Sometimes I think I notice them developing early and have lots of conversations pointing them out to other people (especially my son) and wondering aloud about how all of this will look in retrospect: Is this one of those things that will come to represent this \"era\"?</p>\n\n  <p>If it's not clear what I mean, basically every single thing in the photo below screams 1970s:</p>\n\n\n  <figure>\n    <img src=\"/media/2023/frigidare-70s.jpeg\" alt=\"\">\n    <figcaption>A Frigidare ad from the 1970s. A woman standanding in a kitchen with avacado Frigidare appliances and countertop, a green and yellow flowered wallpaper, she's wearing 70's attire, the cabinet design is somehow also unique to the era, the quality of the film is also reminscant of the 1970s.</figcaption>\n  </figure>\n\n  <p>It seems like there are some things that come to become associated with an era... Stuff that got really popular for a period of time and then left behind.</p>\n\n  <p>Several years ago I pointed out two changes I thought I saw happening in new car colors, and I started to point them out to my son.  If you haven't noticed it, it's real.  For a lot of years the mainstream of automobiles might have varied in real ways (you'd realize how much if you ever tried to match paint on your car), it's still been a fairly common range and palette of colors that I think mainly would be described with words like \"shiny\" or \"glossy\".  I think this has been generally true since the 70's or 80's where it seems I remember some more different reds and oranges and earthy colors (<a href=\"https://twitter.com/briankardell/status/1444398423449427968\">my dad's old truck maybe was interesting in both ways</a>). In any case, now we have all of these new \"ceramic colors\" which look more \"baked in\" to the materials and matte. More often than not they're grays but there are some beautiful turquoises and reds.  Also a new common thing is \"blacked out\" emblems.  I think both of these things began with trendsetting aftermarket people.</p>\n\n  <p>Another thing that this made me think about and try to explain to my son was that that's kind of true of automobile body styles and some other characteristics too.  I found it surprisingly hard to describe because it's not as if there is a single kind of car in any era - it's just that there are a smaller array of characteristics that you can recognize as belonging to that era.</p>\n\n  <p>Don't you think a lot of cars today have similar characteristics?  I do. But... They also feel like they are increasingly resembling a car developed at the end of the 1970's, by a car company that doesn't even exist anymore.  The car company is AMC (American Motors Corporation) and the car was the Eagle SX/4. Below is an advertisement</p>\n\n  <figure>\n    <img src=\"/media/2023/sx4.jpg\" alt=\"\">\n    <figcaption>Advertisement for the Eagle SX/4 around 1979</figcaption>\n  </figure>\n\n\n  <p>Basically, it was sort of the first crossover vehicle that combined a car and 4 wheel (later all wheel) drive.  But also, just visually: Do you see a resemblance to a lot of popular cars today?  I do.  I think this car looks much more similar to many cars I see on the road today than most of what I saw for the 40 years or so between them.  Also interesting, it was available in one of those interesting earthy yellow/tan (and kind of matte!) colors with dark gray/black accents that kind of mostly disappeared, but I could imagine being reborn today.</p>\n\n  <figure>\n    <img src=\"/media/2023/sx4_2.jpg\" alt=\"\">\n    <figcaption>Photo of the Eagle SX/4 in an earthy, somewhat matte tan/yellow with interesting dark trims</figcaption>\n  </figure>\n\n\n  <p>So, I was thinking about this and the fact it was kind of ahead of its time.  In fact, I searched for exactly that and found this article with a title that is pretty much that: <a href=\"https://silodrome.com/amc-eagle-sx-4/?utm_source=pocket_saves\">The AMC Eagle SX/4 – An American 4×4 Sports Car That Was Ahead Of Its Time\"</a>.</p>\n\n\n  <p>That's cool, but I was also wondering how much of that came from the fact that it was not (yet) part of \"The Big 3\". There used to be a lot more American car companies, but we just kept consolidating into those 3. Lots of those became \"brands\" of the Big 3 for a while, but eventually homogenized.  A huge number of them no longer exist.  My first car was a Pontiac. The last Pontiac produced rolled off the line in January 2010. Saturn, same.  My mom drove a Plymouth Voyager.  Plymouth was discontinued in 2001.  In fact, the car I drive now sometimes (not even American: an Isuzo Amigo) hasn't been sold in the US since 2000. And so on.</p>\n\n  <p>I was thinking that most of the diversity today that drives anything about automobiles, pretty much doesn't really come from those Big 3.  And wondering if maybe that meant something for web engines too.  Does it? I don't know. For sure we can see outside (but still standards compliant) innovation in browsers like Arc or Vivaldi or Polypane. I suppose the open source nature makes that more easily possible, but it's worth noting too that this is kept alive mainly through ~80% of that bill being footed by the Web Engines Big 3.</p>\n\n  <p>Anyway... This is already all over the place (sorry, that's how my mind works!), but in sitting down this morning to write this I had an idea that perhaps AI could help me \"illustrate\" if not explain the \"look\" of body styles associated with different decades.  Here's what I found out:  Midjourney is pretty bad at it!</p>\n\n  <p>The photo below was generated with the prompt \"photo of a typical 2010's automobile in America with the most common body style of cars built between 2000 and 2009\".</p>\n\n\n  <figure>\n    <img src=\"/media/2023/special.png\" alt=\"\">\n    <figcaption>\n      A picture that is, for all intents and purposes, almost literally <a href=\"https://pin.it/6v4tnwY\">an early 1950's Buick</a> but with a different emblem.\n    </figcaption>\n  </figure>\n\n\n  <p>I tried several variations and wound up with something like this as one of the 4 options no matter how explicit it was.  I wonder why?  I'd kind of think that identifing and sort of recyling the \"trends\" like that would be very much what AI models like this would be really good at - but apparently not as good as I'd imagine!</p>\n\n  <p>I decided to check the other way round, just for giggles.  The inverse worked better. Giving it the first image in this article mentioned the 1970's in its explanation!  Interesting!</p>\n\n  <p>Anyway, like I said at the get-go: There's no overall point here :)</p>\n\n",
            "url": "https://bkardell.com/blog/cars.html",
            "title": "Completely Random Car and Design Stuff",
            "summary": "This is a kind of \"off brand\" post for me.  It's very, very random and just for fun.  It's just a whole bunch of mental wandering literally all over place about cars, design, AI and only a very little bit about the web.  Many of these observations are probably extermely specific to America, but perhaps still interesting.  There is no overarching \"point\" here, it's just thoughts.",
            "date_modified": "2023-08-27T04:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/2023-Mid-Season-Power-Rankings.html",
            "content_html": "\n  <h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Igalia: Mid-season Power Rankings</h1>\n  \n\n  <p class=\"segue\">Let’s take a look at how the year is stacking up in terms of Open Source contributions. If this were an episode of Friends its title would be \"The One With the Charts\".</p>\n\n  <p>I’ve written before about how I have personally come to really appreciate the act of making a simple list of “things recently accomplished”. It’s always eye opening, and for me at least, usually therapeutic.</p>\n\n  <p>For me personally, it’s been super weird first half of the year and… I feel like I could use a nice list.</p>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">It's been a weird year, right?</h2>\n     \n    <p>I mean, not just for me personally, for all of us I guess, right?</p>\n \n    <p>Mass layoffs everywhere for a while, new shuffling of people we know from Google to Shopify, Mozilla to Google, Google to Igalia, Mozilla to Igalia, Mozilla to Apple, Google to Meta… <a href=\"https://en.wikipedia.org/wiki/Who's_on_First%3F\" target=\"_blank\" rel=\"noopener\">Who’s on first?  Third base!</a></p>\n\n    <p>LLMs are suddenly everywhere.  All of the “big” CSS features people have been clamouring for forever are suddenly right here.  HTML finally got <code>&lt;dialog&gt;</code> and now is getting a popover (via attributes). Apple’s got some funky XR glasses coming.  There is suddenly significant renewed interest in <em>two</em> novel web engines. And that’s just <em>some</em> of the <em>tech</em> stuff.</p>\n\n    <p>So yeah… Let’s see what, if any, impacts all of this are having on the state of projects Igalia works on by looking at our commits so far this year…  Note that Igalia's slice of the pie is separated in each of the charts for quick identification...</p>\n\n    <details>\n      <summary>Quick disclaimers</summary>\n      <p>All of these stats are based on commits publicly available through their respective gits.  This is of course an imperfect measure for many reasons - some commits are huge, some are small. Some small commits are really hard while some large commits are easy, but verbose. Finally, the biggest challenge, even if we accept these metrics is mapping commits to organizations. We use a fairly elaborate system and many checkpoints - we collaborate annually with several of the projects to cross check these mappings. Still, you'll see lots of entries in these charts with just an individual's name.  Often these <em>are</em> individual contractors or contributors, but sometimes it's just that we cannot currently map them some other way. If you see one that should be counted differently, please let me know!  </p>\n    </details>\n  </section>\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">The Big Web Projects</h2>\n    <p>Igalia is still the one (<a href=\"https://www.youtube.com/watch?v=S5aMMRes2u4\" target=\"_blank\" rel=\"noopener\">and still having fun</a>) with the most commits in Chromium and WebKit after Google and Apple, respectively, as we'll see... But we can add some more #1’s this year - even some where we’re not excluding the steward…</p>\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Chromium</h3>\n      <p>Igalia claims a whopping 41.9% of the (non-Google) commits so far in 2023!! That’s more than Microsoft, Intel, Opera, Samsung and ARM combined!!! Yowza!</p>\n\n      <figure>\n          <img src=\"/media/2023/chromium.svg\" alt=\"\">\n          <details>\n            <summary>data</summary>\n            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>41.56%</td></tr><tr><td>Microsoft</td><td>16.42%</td></tr><tr><td>Intel</td><td>11.74%</td></tr><tr><td>Opera</td><td>4.88%</td></tr><tr><td>Ho Cheung</td><td>3.92%</td></tr><tr><td>Samsung</td><td>2.08%</td></tr><tr><td>Stephan Hartmann</td><td>1.62%</td></tr><tr><td>ARM</td><td>1.58%</td></tr><tr><td>Naver Corporation</td><td>1.48%</td></tr><tr><td>Bytedance</td><td>1.12%</td></tr><tr></tr><tr><td>127 other committers</td><td>14%</td></tr></tbody></table></div>\n          </details>\n      </figure>\n\n      <p>As you read the others, keep in mind that the chromium repository actually has more than chrome inside it, so comparisons of these aren't Apples-to-Apples (or, Googles or foxes).</p>\n    </section>\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">WebKit</h3>\n      <p>52.6% of the non-Apple commits in WebKit so far this year are from Igalians. It's interesting to note that a huge 4.9% of \n      all of these are from accounts with less than 10 commits this year - pretty close to what it was in Firefox!</p>\n      <figure>\n          <img src=\"/media/2023/webkit.svg\" alt=\"\">\n      </figure>   \n      <details>\n        <summary>data</summary>\n        <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>54.94%</td></tr><tr><td>Sony</td><td>18.29%</td></tr><tr><td>Ahmad Saleem</td><td>8.81%</td></tr><tr><td>Red Hat</td><td>5.50%</td></tr><tr><td>Rose</td><td>2.69%</td></tr><tr><td>open-tec.co.jp</td><td>1.96%</td></tr><tr><td>warlow.dev</td><td>1.91%</td></tr><tr><td>umich.edu</td><td>0.62%</td></tr><tr><td>Alexey Knyazev</td><td>0.51%</td></tr><tr><td>Google</td><td>0.45%</td></tr><tr><td>40 other committers</td><td>4%</td></tr></tbody></table></div>\n      </details>\n    </section>\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Firefox</h3>\n      <p>We're sitting at the #5 spot (excluding Mozilla) with 8.87% of commits.  Firefox is, in a lot of ways, the trickiest to describe, but just look at it: It's very diverse!  As the inventors of modern open source, I guess it makes sense.  The mozilla-central repository has the most indidivual significant contributors as well as a really long line of tiny contributors.  The tiny contributors (less than 10 commits) contributed 5.2% (compared to 4.85% in WebKit, for example).  However, there are also a few external contributors who are just astoundingly profilfic (some of these bigger slices represent hundreds of commits) and such a number of significant indivial contributors, it amounts to a lot.</p>\n      <figure>\n        <img src=\"/media/2023/firefox.svg\" alt=\"\">\n        <details>\n          <summary>data</summary>\n          <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>André Bargull</td><td>14.38%</td></tr><tr><td>Red Hat</td><td>12.31%</td></tr><tr><td>Birchill</td><td>10.32%</td></tr><tr><td>Gregory Pappas</td><td>9.04%</td></tr><tr><td>Igalia</td><td>8.87%</td></tr><tr><td>Robert Longson</td><td>5.12%</td></tr><tr><td>CanadaHonk</td><td>4.28%</td></tr><tr><td>Masatoshi Kimura</td><td>2.65%</td></tr><tr><td>ganna</td><td>2.21%</td></tr><tr><td>Itiel</td><td>1.68%</td></tr><tr><td>174 other committers</td><td>29%</td></tr></tbody></table>\n        </div></details>\n      </figure> \n    </section>\n\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Pause for a Note</h3>\n      <p>When you look at these charts, it's really heartening to \n      see how many people and organizations care and contribute.  \n      Especially when you look at the Mozilla/Firefox example, it\n      really gives the impression that that project is just a million\n      volunteers.  But, it's important to keep it all in perspective too.  WebKit has about 50 contributing orgs and individuals, Chrome about 140 and Firefox about 185.  A lot more significant a % of contributions come from individuals in Mozilla.  Importantly: In <em>all of these projects, the steward org's contributions absolutely dwarf the rest of the world's contributions combined:</em></p>\n      <figure> \n          <div style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;\">\n              <img src=\"/media/2023/moz.svg\" style=\"width: 100%\" title=\"mozilla-central - mozilla contributed 87.2% of commits\">\n              <img src=\"/media/2023/apple-webkit.svg\" style=\"width: 100%\" title=\"webkit - apple contributed 78.1% of commits\">\n              <img src=\"/media/2023/google-chrome.svg\" style=\"width: 100%\" title=\"chromium - google committed 95.5% of commits\">\n          </div>\n          <figcaption>A version of the pies showing the steward's contributions, for scale (Mozilla contributed 87.2% of all commits, Apple 78.1% and Google 95.5% to their respective projects).</figcaption>\n      </figure> \n      <p>If you think this is astounding, please check out my post <a href=\"https://bkardell.com/blog/Webrise.html\">Webrise</a> and our Web Ecosystem Health series on the <a href=\"https://www.igalia.com/24-7/chats\">Igalia Chats Podcast</a></p>\n    </section>\n\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Wolvic</h3>\n      <p>A new #1 in the reports.  I guess it should come as no suprise at all that we're #1 in terms of commits to our Wolvic XR browser.  It looks at lot like other projects in terms of the steward's balance.  What's more interesting, I think, is that its funding model is based on <a href=\"https://wolvic.com/en/pack/\">partnerships with several organizations and a collective</a> rather than Igalia as a \"go it alone\" source.  \n      </p>\n      <figure>\n          <img src=\"/media/2023/wolvic.svg\" alt=\"\">\n          <details>\n            <summary>data</summary>\n            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>94.90%</td></tr><tr><td>opensuse.org</td><td>0.77%</td></tr><tr><td>ratcliffefamily.org</td><td>0.77%</td></tr><tr><td>gallegonovato</td><td>0.51%</td></tr><tr><td>net-c.ca</td><td>0.51%</td></tr><tr><td>Ayaskant Panigrahi</td><td>0.51%</td></tr><tr><td>Anushka Chakraborty</td><td>0.26%</td></tr><tr><td>Ana2k</td><td>0.26%</td></tr><tr><td>Luna Jernberg</td><td>0.26%</td></tr><tr><td>zohocorp.com</td><td>0.26%</td></tr></tbody></table></div>\n          </details>\n      </figure>   \n    </section>\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Servo</h3>\n      <p>This year, thanks to some new funding and internal investment we can add Servo to a very special #1 list!  Igalia is second to no one in terms of commits there either with 52.7% of <em>all commits</em>!  An amazing 22.24% of those commits in servo are from unmappable committers with less than 10 commits so far this year!</p>\n      <figure>\n          <img src=\"/media/2023/servo.svg\" alt=\"\">\n          <details>\n            <summary>data</summary>\n            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>52.68%</td></tr><tr><td>Mozilla</td><td>25.92%</td></tr><tr><td>sagudev</td><td>5.11%</td></tr><tr><td>Pu Xingyu</td><td>2.73%</td></tr><tr><td>michaelgrigoryan25</td><td>2.02%</td></tr><tr><td>Alex Touchet</td><td>1.66%</td></tr><tr><td>2shiori17</td><td>1.55%</td></tr><tr><td>cybai (Haku)</td><td>1.19%</td></tr><tr><td>Yutaro Ohno</td><td>0.71%</td></tr><tr><td>switchpiggy</td><td>0.59%</td></tr><tr><td>30 other committers</td><td>6%</td></tr></tbody></table></div>\n          </details>\n      </figure>   \n    </section>\n\n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Test-262</h3>\n      <p>Test-262 is the conformance test suite for ECMA work (JavaScript).  I guess you could say we're doing a lot of work there as well, because guess who's got the most commits there? If you guessed Igalia, you'd be right, with 53.4% of all commits!</p>\n      <figure>\n          <img src=\"/media/2023/262.svg\" alt=\"\">\n      </figure>\n      <details>\n        <summary>data</summary>\n        <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>53.64%</td></tr><tr><td>Google</td><td>11.26%</td></tr><tr><td>Justin Grant</td><td>10.60%</td></tr><tr><td>Richard Gibson</td><td>3.97%</td></tr><tr><td>André Bargull</td><td>3.31%</td></tr><tr><td>Jordan Harband</td><td>3.31%</td></tr><tr><td>Bocoup</td><td>3.31%</td></tr><tr><td>Veera</td><td>2.65%</td></tr><tr><td>Huáng Jùnliàng</td><td>1.99%</td></tr><tr><td>José Julián Espina</td><td>1.32%</td></tr></tbody></table></div>\n      </details>\n      <p>Note that total number of commits in Test262 is comparatively rather small as compared to many of the other projects here.</p>\n    </section>\n \n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">Babel</h3>\n      <p>Igalians are now the #1 contributors to Babel, contributing 46.6% of all commits so far this year!</p>\n      <figure>\n          <img src=\"/media/2023/babel.svg\" alt=\"\">\n          <details>\n            <summary>data</summary>\n            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Igalia</td><td>46.35%</td></tr><tr><td>Huáng Jùnliàng</td><td>22.32%</td></tr><tr><td>liuxingbaoyu</td><td>19.31%</td></tr><tr><td>Jonathan Browne</td><td>0.86%</td></tr><tr><td>Avery</td><td>0.86%</td></tr><tr><td>fisker Cheung</td><td>0.86%</td></tr><tr><td>Dimitri Papadopoulos Orfanos</td><td>0.43%</td></tr><tr><td>FabianWarnecke</td><td>0.43%</td></tr><tr><td>Abdulaziz Ghuloum</td><td>0.43%</td></tr><tr><td>magic-akari</td><td>0.43%</td></tr></tbody></table></div>\n          </details>\n      </figure> \n    </section>  \n\n    <section class=\"sectioning\">\n      <h3 class=\"contextual-heading\" style=\"font-size: 3rem;\">V8</h3>\n      <p>Igalia is the #7 contributor to V8 (exclulding Google)! This is a pretty busy repo and it's interesting that 6.36% of these commits are from the unmapped/individual contributors with less than ten commits so far this year.</p>\n      <figure>\n          <img src=\"/media/2023/v8.svg\" alt=\"\">\n          <details>\n            <summary>data</summary>\n            <div><h3>Top 10 contributors</h3><table><tbody><tr><th>Contributor</th><th>Contributions</th></tr><tr><td>Google</td><td>85.66%</td></tr><tr><td>Red Hat</td><td>2.98%</td></tr><tr><td>Intel</td><td>2.57%</td></tr><tr><td>loongson.cn</td><td>2.09%</td></tr><tr><td>iscas.ac.cn</td><td>1.66%</td></tr><tr><td>Microsoft</td><td>1.13%</td></tr><tr><td>ARM</td><td>0.86%</td></tr><tr><td>Igalia</td><td>0.79%</td></tr><tr><td>Bytedance</td><td>0.41%</td></tr><tr><td>eswincomputing.com</td><td>0.34%</td></tr></tbody></table></div>\n          </details>\n      </figure> \n      <p>Google's contributions account for a giant 87.5% of all commits here as well.</p>\n    </section>  \n  </section>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">But that's not all!</h2>\n    <p>All of the above is just looking specifically at the big web projects because, you know, the web is sort of my thing.  If you're reading my blog, there's a pretty good chance it's your thing too.  But Igalia does <em>way more than that</em>, if you can believe it. I probably don't talk about it enough, but it's pretty amazing.  I suppose I can't give a million more charts, but here are just a few more highlights of other notable projects and specifications where Igalia has been playing a big role... (Keep in mind that specifications move a lot more slowly and so have generally far less commits)\n    </p>\n\n    <ul>\n      \n      <li><strong>HTML</strong>: Igalians were #3 among contribtor commits to HTML with 8.94% so far this year (behind Google and Apple).</li>\n\n      <li><strong>Web Assembly</strong>: Igalia is the #3 contributor to Web Assembly with 8.75% of the commits so far this year!</li>\n\n      <li><strong>ARIA</strong>: So far this year, Igalia is the #1  contributor to the ARIA repo with 19.4% of commits!</li>\n\n      <li><strong>NativeScript</strong>: Igalia is currently the #1 contributor so far this year to the NativeScript repository with 58.3% of all commits!</li>\n\n      <li><strong>GStreamer</strong> GStreamer is widely used and powerful open source multimedia framework. Igalia is the #2 contributor there!</li>\n\n      <li><strong>VK-GL-CTS: </strong> The official Kronos OpenGL and Vulkan conformance test suite (graphics).  It would be a massive understatement to say that Igalia has been a major contributor: We're the #1 contributor there with 31.1% of all commits.</li>\n\n      <li><strong>Mesa: </strong> The Mesa 3D Graphics Library is huge and contains open source implementations of pretty much every graphical standard (Vulkan, as mentioned above, for example).  Igalia is the #5 contributor there so far this year, contributing 6.62% of all commits.</li>\n\n      <li><strong>Piglit</strong>: Piglit is an open-source test suite for OpenGL implementations.  Igalia is the #5 contributor there with 6.86%<p></p></li>\n\n\n    </ul>\n  </section>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Wrapping up...</h2>\n    <p>It's always amazing to me to look at the data.  I hope it's interesting to others too.  There are, of course, lots of reasons that all of the committers do what they do, but ultimately, open source development and maintenance benefits us all.  The reason that Igalia is able to do all of this is that we are funded by a diverse array of clients making things downstream with needs.</p>\n\n    <p>You know where to find us...</p>\n  </section>\n\n   \n\n",
            "url": "https://bkardell.com/blog/2023-Mid-Season-Power-Rankings.html",
            "title": "Igalia: Mid-season Power Rankings",
            "summary": "Let’s take a look at how the year is stacking up in terms of Open Source contributions. If this were an episode of Friends its title would be \"The One With the Charts\".",
            "date_modified": "2023-08-10T04:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/SaysWho.html",
            "content_html": "\n  <h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Says Who?</h1> \n  <p class=\"segue\">Thoughts on standards and the new baseline effort.</p>\n\n  <p>If you've been around me, or my writing, for any time at all, you've probably heard me ask \"but what really makes it a standard\"?</p>\n\n  <p>It is, for example, possible to have words approved in a standards body for which there are, for all intents and purposes, not much in the way of actual implementation or users. Conversely, it is possible to have things that had nothing to do with standards bodies and yet have dozens or hundreds of interoperable implementations and open licenses and are, in reality, much more universal.</p>\n\n  <p>At the end of the day, any real judgement kind of involves looking at the reality on the ground. It is a standard... when it is a standard.</p>  \n\n  <p>I come from Pittsburgh, and in the Steel City, outside the locker room of the Steelers (our amazing football team) it says...</p>\n\n  <figure>\n    <img src=\"/media/steelers-standard.jpg\" alt=\"Text painted on the wall that says 'The standard... is the standard'.\">\n  </figure>\n\n  <p>See? It's right there on the wall.</p>\n\n  <p>Still, if this makes you uncomfortable, think about an english dictionary.  The words in it are simply recognized as standards... because they are.</p>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Where is the invisible line?</h2>\n\n    <p>At some point, it seems, a thing crosses an invisible line and then it's standard. But only after a gradual process to reach that point. The <em>very end</em> of that process is really rather boring because it's really just stating the obvious.</p>\n\n    <p>But where is that magical line when it comes to \"the reality on the ground\" for web standards?</p>\n\n    <p>There's a new effort by the WebDX Community Group called \"Baseline\" which attempts to idenitfy it and I'm excited because feels like it could be really valuable in several ways.</p>\n\n    <p>One that I am most keen on is using it to create a really high signal-to-noise channel for developers to subscribe to.  If we define a line right, then something <em>reaching</em> that line is very newsworthy and pretty rare, so we can <em>all</em> afford to pay some attention to it.  Imagine an RSS Feed and social media accounts that posted very rarely and only told you this Very Serious Amazing News. Yes, please, give that access to my notifcations!  I feel like that would make everything feel a lot less overwhelming and also probably markedly speed <em>real</em> adoption at scale.</p>\n\n    <p>The really tricky thing here seems to be, mainly, that it's just really hard to define where that line is in a way everyone agrees with that is actually still useful as more than a kind of historical artifact. That's not to say that such an artifact <em>isn't</em> useful to future learners, but again, by that point this will just be common knowledge.</p>\n  </section>\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Stage {x}?</h2>\n\n    <p>The new Baseline idea has a definition (as of the time of this writing, that is \"supported in the last 2 major releases of certain popular browsers (Firefox, Samsung Internet, Safari and Chrome).  There was a lot of debate about it before arriving at that.  It also currently has a whole slew of issues about why that definition isn't great.</p>\n\n    <p>But maybe that's because there are actually several different lines and all of them are interesting in different ways. Think about a progress meter: there can be lots of lines along the way to \"done\".</p>\n\n    <p>The thing I like about the ECMA \"Stages\" model is that it's easy to visualize like that, and has no clever names: Just 0, 1, 2, 3, 4.  Each of those is a 'line' you pass on the way to done.  Maybe that kind of model works to discuss here too - we just need more numbers, because those are about ECMA 'done-ness' and not something like what baseline is trying to convey.</p>\n\n    <p>Something reaching stage 4 is a huge day, but it doesn't mean the on-the-ground-reality of \"all users have support on their devices\". In theory, at least, that could still take years to reach.</p>\n\n    <p>Conceptually speaking, we could imagine more interesting \"lines\" (plural) a thing would cross on the way to that day.</p>\n\n    <p>For example, the day we learn there is a final engine implementation in experimental builds passing tests is an interesting line. Maybe that's \"Stage 5\" in my analogy.</p>\n\n    <p>The day when it \"ships without caveat in the last of the 'steward' browsers\" is, in my opinion, a <strong><em>super</em></strong> interesting line (that is, the steward browser that primarily maintains the engine itself). That seems like an especially newsworthy day we should pay attention to because many people will be working on projects that won't ship for a long time, and maybe it's worth considering using it. Maybe that's like \"Stage 6\" in my analogy.</p>\n\n    <p>But that also doesn't mean all of the downstream browsers have released support - that can take time. If you're just starting on a months or year long project, that's probably pretty safe.  There's always also a risk that downstream browsers can choose not to adopt a new feature for some reason. Many downstream browsers have considerable support differences with certain APIs (web speech, for example).  Not much you can do about that, but what does it mean? Is Web Speech a standard? Is it “baseline”? There are at least tens of millions of browser instances out there that lack support, but a few billion that don't.</p>\n\n    <p>Even in the steward's own browser (ie, Chrome, Firefox or Safari), it's not as if releasing a new version is a lightswitch that updates all of the devices in the world. There are lots of things that prevent or delay updating:  Corporate controls, OS limits/settings. In some cases, a user interaction is simply required and for whatever reason, people just... don't, for long stretches of time.</p>\n\n    <p>So, what should baseline use?  Any of them? There probably several useful 'lines' (or stages, if that is easier to imagine) worth discussing.  I guess one of those can be called \"baseline\" - I'm just not really sure where that is in this spectrum. I'm curious for more your thoughts!</p>\n\n    <p>Feel free to hit me up on any of the social medias. Tweet, toot or skeet at me if you like.  Or, even better: If you're interested in contributing to the thinking around this, it's part of the <a href=\"https://www.w3.org/community/webdx/\">Web Platform DX Community Group</a> which you can participate in.  This work is being tracked and discussed mainly in its <a href=\"https://github.com/web-platform-dx/feature-set\">Feature-Set Repository</a> on GitHub.  Participation is welcome.</p>\n </section>\n",
            "url": "https://bkardell.com/blog/SaysWho.html",
            "title": "Says Who?",
            "summary": "Thoughts on standards and the new baseline effort.",
            "date_modified": "2023-05-23T04:00:00.000Z"
        },
        {
            "id": "https://bkardell.com/blog/WolvicBTS.html",
            "content_html": "\n  <h1 class=\"contextual-heading\" style=\"font-size: 2rem;\">Wolvic Behind-the-Scenes</h1> \n  <p class=\"segue\">A little post about power dynamics, frustrations, mistakes and things I’m still learning along the way about the challenges of making The World’s Greatest Cross Device Open Source Browser for XR (or any browser, really).</p>\n\n  <p>The next minor (not patch) release of Wolvic will very likely include a fairly major API addition, but if it does, you won’t even find it in the release notes.  Still I find myself wanting to write about it.</p>\n\n  <p>We are … {drum roll} … very probably <sup><a href=\"#footnote1\">[1]</a></sup> <strong>re</strong>-adding support for the WebVR API.</p>\n\n  <p>Sigh.</p>\n\n  <p>If you're not familiar: The Web<strong>VR</strong> API was first conceived in 2014 and shipped in Firefox in 2015. It ran as an <em>origin trial</em> in Chrome itself from 2016 until 2018, but was enabled in some downstream browsers.  It has been superseded since 2018 by WebXR, which supports a superset of its use cases and addresses some UX issues caused by WebVR. It was removed from Firefox and Wolvic in early 2022.</p>\n\n  <p>And now, in spite of all of that, we're very probably <sup><a href=\"#footnote1\">[1]</a></sup> re-enabling it in Wolvic. For now, at least.</p>\n\n \n  <p style=\"color:mediumpurple;font-family: monospace;\">\nRecord scratch <br>\nFreeze Frame <br>\nYup, that’s me. <br>\nYou’re probably wondering how I got here…\n  </p>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Reality is Messy</h2>\n\n    <p>To reiterate, this technology</p>\n    <ul>\n      <li>Was supposed to be experimental</li>\n      <li>Was superseded <em>five years ago</em> by WebXR, which is under active development and/or partly shipping in multiple browser engines;</li>\n      <li>Has an <em>easy</em> replacement (many cases just need a library update).</li>\n    </ul>\n\n    <p>However, <em>none</em> of that really matters if you’re a “young” browser and your users complain in the app stores, because that really hampers your ability to grow.</p>\n\n    <p>And at least currently, too many do.</p>\n  </section>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">“user-agent” cuts browsers both ways</h2>\n\n    <p>I’ve written before (a few times actually) about our <a href=\"https://bkardell.com/blog/UAGottaBeKidding.html\" target=\"_blank\" rel=\"noopener\">trials with the user agent string</a>, and sites just blocking our browser from getting immersive content and why we have to tell <a href=\"https://bkardell.com/blog/AFewGoodLies.html\" target=\"_blank\" rel=\"noopener\">A Few Good Lies</a> on behalf of the user. We are the <em>user agent</em>, that’s our job.</p>\n\n    <p>But also, if we don’t tell those lies, people will give us bad ratings in the stores.</p>\n\n    <p>It makes sense, right? I don’t really blame them.  At the end of the day <em>users just don’t care who did <span style=\"font-family: fantasy\">The Bad Thing™</span></em>.</p>\n\n    <p>They don’t care that websites shouldn’t try use the UA string like that, or any of that other unseen stuff.  What they care about is that from their perspective it just</p>\n\n    <blockquote>\n      <p><em>doesn’t work in your shitty upstart browser. ☆ 1 star</em>.</p>\n    </blockquote>\n\n    <p>For a young browser, app store reviews matter <em>a lot</em><sup><a href=\"#footnote2\">[2]</a></sup>. And reviews will typically skew negative, because happy users don’t really have a good motivation to give you a positive review; they just want to do whatever they do in the browser, not jump over to the app store to say \n\n    </p><blockquote>\n      <p>It got right out of my way. ☆☆☆☆☆ five stars</p>. \n    </blockquote>\n\n    <p>Unhappy users, though: <em>they’ll</em> leave a review, because they’re frustrated and this is the only real chance they have to do anything about it.</p>\n\n    <p>On the one hand, that kind of mechanism can be generally helpful: It gives users at least some way to apply pressure on apps to make users happy. Stores also give us ways to reply and ask questions, and to let them know their issue is fixed so that hopefully they can update their review. That happens, and in an ideal world, maybe that’s fine.</p>\n\n  </section>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">At the same time: You might not want to tell everyone exactly what you were doing...</h2>\n\n    <p><em>However</em>, users don’t always want to give details on what precise thing they were doing that led to them to getting frustrated enough to leave a bad review.</p>\n\n    <p>So, for example, a surprising number of sites which offer streaming video <em>don’t</em> use the <code>&lt;video&gt;</code> element. Often, instead they’ll use some library which rolls its own video streaming support, usually with device feature targeting, based on some lower-level APIs.  So, they'll offer you an immersive experience if they think that's possible.  If support for those APIs is dropped, it <em>looks like</em> video streaming broke, with no warning.  Libraries might have updates available, but sites don't always get updates like that.</p>\n\n    <p>So... For example, if your upstart browser appears to have problems with some sexually explicit streaming video sites, those people might be <em>highly motivated</em> to tell you that your browser is shitty or broken.</p>\n\n    <p>But also, that’s about all they will tell you.</p>\n\n    <p>Again, I get it!  I mean, they don’t care why it’s broken, and they don’t want to tell you what they were looking at. I can respect both of those things!</p>\n\n    <p>But… that also means it’s very hard to actually do anything about it.</p>\n\n    <p>Look, the web is really terribly, mindbogglingly <em>huge</em> place and certainly by far the vast majority of it appears to be working just fine.  If we can identify a thing that isn’t working, we’d like to fix it. But we’re unlikely to just stumble across it ourselves.</p>\n\n    <p>The worst part about this is that I imagine it will be very hard to get those people to reconsider because it’s impossible to know when to tell them their issue is fixed, and I assume at some point they’ll just stop looking.</p>\n\n    <p>Wolvic is adding a new way to report a broken site, optionally anonymously.  Maybe that will help this specific problem, but I’m not sure.</p>\n  </section>\n\n  <section class=\"sectioning\">\n    <h2 class=\"contextual-heading\" style=\"font-size: 2.5rem;\">Help a browser out...</h2>\n    <p>I hope it’s interesting to come on this adventure of building The World’s Greatest Cross Device Open Source Browser for XR with me.</p>\n\n    <p>I hope if you know of any WebVR stuff floating around out there you’ll encourage people to update their libraries already so we can hopefully all get rid of it someday.</p>\n\n    <p>If you have Wolvic, maybe you’ll think about popping over and give it an honest rating if you haven’t already - or tell someone to try it out.</p>\n  </section>\n  <hr>\n\n  <section> \n    <p>Footnotes</p>\n    <ol>\n      <li id=\"footnote1\">Assuming that we ultimately judge that this won't actually cause even worse problems after some more research.  Part of the reason we were eager to remove it early in the life of Wolvic was that there are so many of exactly the kinds of problems described here with websites or libraries <em>trying</em> to make a good accommodation but making a poor assumption.  We suspect that many things were checking for WebVR before WebXR, which would prevent the preferred APIs from being used and further entrench the focus on the deprecated ones!</li>\n      <li id=\"footnote2\">I think about these rating things in stores every time I’m shopping. It feels like they generally not great. They are a dull instrument and full of problems and bad incentives and ways to game.  <em>We should be able to do better than that</em>. For example, a small number of reviews from people I have some reason to trust is worth thousands from random internet accounts I have plenty of reason to <em>mistrust</em>.  I’m not sure how we build that yet, but maybe one of you can figure it out. Please :) If you don’t mind, and share it with the rest of the class. Thanks.</li>\n    </ol>\n  </section>\n",
            "url": "https://bkardell.com/blog/WolvicBTS.html",
            "title": "Wolvic Behind-the-Scenes",
            "summary": "A little post about power dynamics, frustrations, mistakes and things I’m still learning along the way about the challenges of making The World’s Greatest Cross Device Open Source Browser for XR (or any browser, really).",
            "date_modified": "2023-05-03T04:00:00.000Z"
        }
    ]
}